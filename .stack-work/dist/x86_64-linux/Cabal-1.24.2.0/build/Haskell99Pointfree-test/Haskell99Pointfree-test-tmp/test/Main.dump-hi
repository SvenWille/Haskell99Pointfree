
==================== FINAL INTERFACE ====================
2017-03-30 13:23:12.628011 UTC

interface main@main:Main 8002
  interface hash: bd391d5e7b97345675707df2b6b26119
  ABI hash: 1e035ba183792ce7fa4905a1ed34ae70
  export-list hash: 72299f9c7fb25bc52e1274ae1b5cc438
  orphan hash: 941ec41af3aa3dc35acdde0c252baad2
  flag hash: 7775b177a6e2fdeb24ee2e8988383582
  sig of: Nothing
  used TH splices: False
  where
exports:
  Main.main
module dependencies:
package dependencies: HUnit-1.5.0.0@HUnit-1.5.0.0-DvjF79OHhCC7SzfeEty4OI
                      Haskell99Pointfree-0.1.0.0@Haskell99Pointfree-0.1.0.0-CH0qb3zjB5EJLvf8j5jKUL
                      QuickCheck-2.9.2@QuickCheck-2.9.2-Jyj4gc4JxkEIgGFLAsGhs9
                      ansi-terminal-0.6.2.3@ansi-terminal-0.6.2.3-4HPxin1iv6RAndS8lH3nzo
                      array-0.5.1.1@array-0.5.1.1
                      async-2.1.1@async-2.1.1-4n6HEMPJR2eJK0JpvCfuPK base-4.9.1.0
                      call-stack-0.1.0@call-stack-0.1.0-FYVrCPXGP9EGAuTW32963O
                      containers-0.5.7.1@containers-0.5.7.1
                      deepseq-1.4.2.0@deepseq-1.4.2.0 directory-1.3.0.0@directory-1.3.0.0
                      filepath-1.4.1.1@filepath-1.4.1.1
                      ghc-boot-th-8.0.2@ghc-boot-th-8.0.2 ghc-prim-0.5.0.0
                      hspec-2.4.3@hspec-2.4.3-GMvKf4YYlquDqqi6Pf0wNb
                      hspec-core-2.4.3@hspec-core-2.4.3-3dXPWtMZSqIKb3t3JsGIUg
                      hspec-expectations-0.8.2@hspec-expectations-0.8.2-DujBeQFEMmfJJRLad7XQgd
                      integer-gmp-1.0.0.1 pretty-1.1.3.3@pretty-1.1.3.3
                      primitive-0.6.1.0@primitive-0.6.1.0-6AbSTw9JXz141LE5p6LGH
                      quickcheck-io-0.1.4@quickcheck-io-0.1.4-C5t3MfRsr5zrFam5nRAFy
                      random-1.1@random-1.1-9tceXaeYIMZ4JrKq20Egog
                      setenv-0.1.1.3@setenv-0.1.1.3-8dEhk6JWvlmCmVyBammSpu
                      stm-2.4.4.1@stm-2.4.4.1-JQn4hNPyYjP5m9AcbI88Ve
                      template-haskell-2.11.1.0
                      tf-random-0.5@tf-random-0.5-BGjMgO8m67W8CHiEl15kZ7
                      time-1.6.0.1@time-1.6.0.1 transformers-0.5.2.0@transformers-0.5.2.0
                      unix-2.7.2.1@unix-2.7.2.1
                      utility-ht-0.0.13@utility-ht-0.0.13-HmMdLiB8sea9VwMp6zcUD0
orphans: base-4.9.1.0:GHC.Base base-4.9.1.0:GHC.Float
         quickcheck-io-0.1.4@quickcheck-io-0.1.4-C5t3MfRsr5zrFam5nRAFy:Test.QuickCheck.IO
         stm-2.4.4.1@stm-2.4.4.1-JQn4hNPyYjP5m9AcbI88Ve:Control.Monad.STM
         time-1.6.0.1@time-1.6.0.1:Data.Time.Calendar.Gregorian
         time-1.6.0.1@time-1.6.0.1:Data.Time.Format.Parse
         time-1.6.0.1@time-1.6.0.1:Data.Time.LocalTime.LocalTime
         transformers-0.5.2.0@transformers-0.5.2.0:Control.Monad.Trans.Error
family instance modules: base-4.9.1.0:Control.Applicative
                         base-4.9.1.0:Data.Complex base-4.9.1.0:Data.Either
                         base-4.9.1.0:Data.Functor.Const base-4.9.1.0:Data.Functor.Identity
                         base-4.9.1.0:Data.List.NonEmpty base-4.9.1.0:Data.Monoid
                         base-4.9.1.0:Data.Semigroup base-4.9.1.0:Data.Type.Equality
                         base-4.9.1.0:Data.Version base-4.9.1.0:Data.Void
                         base-4.9.1.0:GHC.Exts base-4.9.1.0:GHC.Generics
                         base-4.9.1.0:GHC.IO.Exception base-4.9.1.0:GHC.TypeLits
                         containers-0.5.7.1@containers-0.5.7.1:Data.IntMap.Base
                         containers-0.5.7.1@containers-0.5.7.1:Data.IntSet.Base
                         containers-0.5.7.1@containers-0.5.7.1:Data.Map.Base
                         containers-0.5.7.1@containers-0.5.7.1:Data.Sequence
                         containers-0.5.7.1@containers-0.5.7.1:Data.Set.Base
                         ghc-boot-th-8.0.2@ghc-boot-th-8.0.2:GHC.LanguageExtensions.Type
                         hspec-core-2.4.3@hspec-core-2.4.3-3dXPWtMZSqIKb3t3JsGIUg:Test.Hspec.Core.Example
                         pretty-1.1.3.3@pretty-1.1.3.3:Text.PrettyPrint.Annotated.HughesPJ
                         pretty-1.1.3.3@pretty-1.1.3.3:Text.PrettyPrint.HughesPJ
                         primitive-0.6.1.0@primitive-0.6.1.0-6AbSTw9JXz141LE5p6LGH:Control.Monad.Primitive
                         template-haskell-2.11.1.0:Language.Haskell.TH.Syntax
import  -/  Haskell99Pointfree-0.1.0.0@Haskell99Pointfree-0.1.0.0-CH0qb3zjB5EJLvf8j5jKUL:Haskell99Pointfree a327009d9ce9008792c4297aca8f6693
import  -/  Haskell99Pointfree-0.1.0.0@Haskell99Pointfree-0.1.0.0-CH0qb3zjB5EJLvf8j5jKUL:Haskell99Pointfree.P1 0f2812bae60a9158c18268b8a1ae59de
import  -/  QuickCheck-2.9.2@QuickCheck-2.9.2-Jyj4gc4JxkEIgGFLAsGhs9:Test.QuickCheck 5d7cb5b36e5406469ab226c41cc67877
import  -/  QuickCheck-2.9.2@QuickCheck-2.9.2-Jyj4gc4JxkEIgGFLAsGhs9:Test.QuickCheck.Gen fa9fa30ba543355933bd6081ce57f80f
import  -/  QuickCheck-2.9.2@QuickCheck-2.9.2-Jyj4gc4JxkEIgGFLAsGhs9:Test.QuickCheck.Property 57ffac30066d77d501dc791a65b8da3b
import  -/  base-4.9.1.0:Control.Exception a76dd9666251322fe34dbcca3a0817bf
import  -/  base-4.9.1.0:Data.Foldable 3e0b6967a1da89945d0e2d47266337a2
import  -/  base-4.9.1.0:Data.Maybe d876c4ffe4b3c43755a781e8ad860d88
import  -/  base-4.9.1.0:GHC.Base c4231c43c07e46080a26bf94094c7aa1
import  -/  base-4.9.1.0:GHC.IO eb504c57b397cf133849f8586f15dafb
import  -/  base-4.9.1.0:GHC.List ab8c4e523e6c479c549d3bcd5fc4a439
import  -/  base-4.9.1.0:Prelude 22dd289b8469a8fa8dc81cab7b237771
import  -/  ghc-prim-0.5.0.0:GHC.Classes 0bdf3d057a415ec1b84a7b1994efbe47
import  -/  ghc-prim-0.5.0.0:GHC.Types 89f8de4f08018c9177c98d979eae0e45
import  -/  hspec-2.4.3@hspec-2.4.3-GMvKf4YYlquDqqi6Pf0wNb:Test.Hspec f26ac0abf2d3f6efac9cb724fac54dc1
import  -/  hspec-core-2.4.3@hspec-core-2.4.3-3dXPWtMZSqIKb3t3JsGIUg:Test.Hspec.Core.Runner 4b8d9829db94b4bd892043f249c635c4
import  -/  hspec-core-2.4.3@hspec-core-2.4.3-3dXPWtMZSqIKb3t3JsGIUg:Test.Hspec.Core.Spec de2c5410ad0d19b7d7ad59de5431eaa4
import  -/  hspec-core-2.4.3@hspec-core-2.4.3-3dXPWtMZSqIKb3t3JsGIUg:Test.Hspec.Core.Spec.Monad ba9dc1f4fca63bf285a1080422f2e067
import  -/  hspec-expectations-0.8.2@hspec-expectations-0.8.2-DujBeQFEMmfJJRLad7XQgd:Test.Hspec.Expectations 7783c70233bb75afab7f7705bd782d86
83642834dfadf4b8b4e464c619a46a4d
  $s$fArbitrary[]_$s$fArbitrary[]_$cshrink ::
    [GHC.Types.Int] -> [[GHC.Types.Int]]
  {- Arity: 1, HasNoCafRefs, Strictness: <S,U>,
     Unfolding: InlineRule (1, True, False)
                (\ (xs :: [GHC.Types.Int]) ->
                 Test.QuickCheck.Arbitrary.shrinkList
                   @ GHC.Types.Int
                   Test.QuickCheck.Arbitrary.$fArbitraryInt_$cshrink
                   xs) -}
22f56eedf37116ea5bdff8cdb3a685ac
  $s$fArbitrary[]_$s$fArbitrary[]_$cshrink1 ::
    [GHC.Types.Char] -> [[GHC.Types.Char]]
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: InlineRule (1, True, False)
                (\ (xs :: [GHC.Types.Char]) ->
                 Test.QuickCheck.Arbitrary.shrinkList
                   @ GHC.Types.Char
                   Test.QuickCheck.Arbitrary.$fArbitraryChar_$cshrink
                   xs) -}
92170d97e7a2467f8d3aeb05d4d0bdd3
  $s$fArbitrary[]_$s$fArbitrary[]_$cshrink2 ::
    [GHC.Types.Bool] -> [[GHC.Types.Bool]]
  {- Arity: 1, HasNoCafRefs, Strictness: <S,U>,
     Unfolding: InlineRule (1, True, False)
                (\ (xs :: [GHC.Types.Bool]) ->
                 Test.QuickCheck.Arbitrary.shrinkList
                   @ GHC.Types.Bool
                   Test.QuickCheck.Arbitrary.$fArbitraryBool_$cshrink
                   xs) -}
0d4ef7fa28c2a97d735a5d8f936b7ece
  $s$fEqMaybe :: GHC.Classes.Eq (GHC.Base.Maybe GHC.Types.Int)
  {- HasNoCafRefs, Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ (GHC.Base.Maybe GHC.Types.Int)
                  Main.$s$fEqMaybe_$s$fEqMaybe_$c==
                  (GHC.Base.$fEqMaybe_$c/= @ GHC.Types.Int GHC.Classes.$fEqInt) -}
8535f5f3dfe9716858244347f7a4dc13
  $s$fEqMaybe1 ::
    GHC.Classes.Eq (GHC.Base.Maybe GHC.Integer.Type.Integer)
  {- HasNoCafRefs, Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ (GHC.Base.Maybe GHC.Integer.Type.Integer)
                  Main.$s$fEqMaybe_$s$fEqMaybe_$c==1
                  (GHC.Base.$fEqMaybe_$c/=
                     @ GHC.Integer.Type.Integer
                     GHC.Integer.Type.$fEqInteger) -}
fc856f15bc9302eec53e4387db218abf
  $s$fEqMaybe_$s$fEqMaybe_$c== ::
    GHC.Base.Maybe GHC.Types.Int
    -> GHC.Base.Maybe GHC.Types.Int -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U>,
     Unfolding: InlineRule (2, True, False)
                (\ (ds :: GHC.Base.Maybe GHC.Types.Int)
                   (ds1 :: GHC.Base.Maybe GHC.Types.Int) ->
                 case ds of wild {
                   GHC.Base.Nothing
                   -> case ds1 of wild1 {
                        GHC.Base.Nothing -> GHC.Types.True
                        GHC.Base.Just ipv -> GHC.Types.False }
                   GHC.Base.Just a1
                   -> case ds1 of wild1 {
                        GHC.Base.Nothing -> GHC.Types.False
                        GHC.Base.Just b1 -> GHC.Classes.eqInt a1 b1 } }) -}
65efd2464f8100099cfba09031e26b18
  $s$fEqMaybe_$s$fEqMaybe_$c==1 ::
    GHC.Base.Maybe GHC.Integer.Type.Integer
    -> GHC.Base.Maybe GHC.Integer.Type.Integer -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U>,
     Unfolding: InlineRule (2, True, False)
                (\ (ds :: GHC.Base.Maybe GHC.Integer.Type.Integer)
                   (ds1 :: GHC.Base.Maybe GHC.Integer.Type.Integer) ->
                 case ds of wild {
                   GHC.Base.Nothing
                   -> case ds1 of wild1 {
                        GHC.Base.Nothing -> GHC.Types.True
                        GHC.Base.Just ipv -> GHC.Types.False }
                   GHC.Base.Just a1
                   -> case ds1 of wild1 {
                        GHC.Base.Nothing -> GHC.Types.False
                        GHC.Base.Just b1 -> GHC.Integer.Type.eqInteger a1 b1 } }) -}
3bcc7b441a5e99e9b1dcb27ace21a3e9
  $s$fShowMaybe :: GHC.Show.Show (GHC.Base.Maybe GHC.Types.Int)
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ (GHC.Base.Maybe GHC.Types.Int)
                  (GHC.Show.$fShowMaybe_$cshowsPrec
                     @ GHC.Types.Int
                     GHC.Show.$fShowInt)
                  (GHC.Show.$fShowMaybe_$cshow @ GHC.Types.Int GHC.Show.$fShowInt)
                  Main.$s$fShowMaybe_$s$fShowMaybe_$cshowList -}
34ceddefd44e5d08ae1283816eeed1e4
  $s$fShowMaybe1 ::
    GHC.Show.Show (GHC.Base.Maybe GHC.Integer.Type.Integer)
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ (GHC.Base.Maybe GHC.Integer.Type.Integer)
                  (GHC.Show.$fShowMaybe_$cshowsPrec
                     @ GHC.Integer.Type.Integer
                     GHC.Show.$fShowInteger)
                  (GHC.Show.$fShowMaybe_$cshow
                     @ GHC.Integer.Type.Integer
                     GHC.Show.$fShowInteger)
                  Main.$s$fShowMaybe_$s$fShowMaybe_$cshowList1 -}
94e1a8285cab8934b829bd3a97915f53
  $s$fShowMaybe_$s$fShowMaybe_$cshowList ::
    [GHC.Base.Maybe GHC.Types.Int] -> GHC.Show.ShowS
  {- Arity: 2, Strictness: <S,1*U><L,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (eta :: [GHC.Base.Maybe GHC.Types.Int])
                   (eta1 :: GHC.Base.String) ->
                 GHC.Show.showList__
                   @ (GHC.Base.Maybe GHC.Types.Int)
                   (GHC.Show.$fShowMaybe_$cshowsPrec
                      @ GHC.Types.Int
                      GHC.Show.$fShowInt
                      GHC.Show.shows22)
                   eta
                   eta1) -}
88199e0465a402888b3d40b0f2e89722
  $s$fShowMaybe_$s$fShowMaybe_$cshowList1 ::
    [GHC.Base.Maybe GHC.Integer.Type.Integer] -> GHC.Show.ShowS
  {- Arity: 2, Strictness: <S,1*U><L,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (eta :: [GHC.Base.Maybe GHC.Integer.Type.Integer])
                   (eta1 :: GHC.Base.String) ->
                 GHC.Show.showList__
                   @ (GHC.Base.Maybe GHC.Integer.Type.Integer)
                   (GHC.Show.$fShowMaybe_$cshowsPrec
                      @ GHC.Integer.Type.Integer
                      GHC.Show.$fShowInteger
                      GHC.Show.shows22)
                   eta
                   eta1) -}
1ec52469648572cac2ba1a50b1f7ccb7
  $s$fShow[] :: GHC.Show.Show [GHC.Types.Bool]
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ [GHC.Types.Bool]
                  Main.$s$fShow[]_$s$fShow[]_$cshowsPrec
                  Main.$s$fShow[]_$s$fShow[]_$cshow
                  Main.$s$fShow[]_$s$fShow[]_$cshowList -}
2c000a86092a586d3a094495488771b3
  $s$fShow[]_$s$fShow[]_$cshow :: [GHC.Types.Bool] -> GHC.Base.String
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ (x :: [GHC.Types.Bool]) ->
                 GHC.Show.$fShowBool_$cshowList
                   x
                   (GHC.Types.[] @ GHC.Types.Char)) -}
8f6143ead2e40abc1120430e30c8671b
  $s$fShow[]_$s$fShow[]_$cshowList ::
    [[GHC.Types.Bool]] -> GHC.Show.ShowS
  {- Arity: 2, Strictness: <S,1*U><L,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (eta :: [[GHC.Types.Bool]]) (eta1 :: GHC.Base.String) ->
                 GHC.Show.showList__
                   @ [GHC.Types.Bool]
                   GHC.Show.$fShowBool_$cshowList
                   eta
                   eta1) -}
02a5d30f52a972d8e33adf3f993fe72d
  $s$fShow[]_$s$fShow[]_$cshowsPrec ::
    GHC.Types.Int -> [GHC.Types.Bool] -> GHC.Show.ShowS
  {- Arity: 3, Strictness: <L,A>,
     Unfolding: InlineRule (1, True, True)
                (\ (ds :: GHC.Types.Int)
                   (eta :: [GHC.Types.Bool])
                   (eta1 :: GHC.Base.String) ->
                 GHC.Show.$fShowBool_$cshowList eta eta1) -}
9a9563d399d2ca566acc15a2a10cb45a
  $sproperty2 ::
    Test.QuickCheck.Random.QCGen -> GHC.Types.Int -> [GHC.Types.Int]
  {- Arity: 2, Strictness: <L,1*U(U,U,U,1*U,A,A)><S(S),1*U(U)>,
     Unfolding: InlineRule (2, True, False)
                (\ (eta :: Test.QuickCheck.Random.QCGen) (eta1 :: GHC.Types.Int) ->
                 case eta1 of ww { GHC.Types.I# ww1 ->
                 Test.QuickCheck.Gen.$wlistOf
                   @ GHC.Types.Int
                   Test.QuickCheck.Arbitrary.$fArbitraryInt3
                     `cast`
                   (Sym (Test.QuickCheck.Gen.N:Gen[0] <GHC.Types.Int>_R))
                   eta
                   ww1 }) -}
6d4751442d2fd309e0d93a81c0500bb2
  $sproperty5 ::
    Test.QuickCheck.Random.QCGen -> GHC.Types.Int -> [GHC.Types.Char]
  {- Arity: 2, Strictness: <L,1*U(U,U,U,1*U,A,A)><S(S),1*U(U)>,
     Unfolding: InlineRule (2, True, False)
                (\ (eta :: Test.QuickCheck.Random.QCGen) (eta1 :: GHC.Types.Int) ->
                 case eta1 of ww { GHC.Types.I# ww1 ->
                 Test.QuickCheck.Gen.$wlistOf
                   @ GHC.Types.Char
                   Test.QuickCheck.Arbitrary.$fArbitraryChar1
                     `cast`
                   (Sym (Test.QuickCheck.Gen.N:Gen[0] <GHC.Types.Char>_R))
                   eta
                   ww1 }) -}
53fbda25adb8a1944f899d0311b28c3c
  $sproperty8 ::
    Test.QuickCheck.Random.QCGen -> GHC.Types.Int -> [GHC.Types.Bool]
  {- Arity: 2, Strictness: <L,1*U(U,U,U,1*U,A,A)><S(S),1*U(U)>,
     Unfolding: InlineRule (2, True, False)
                (\ (eta :: Test.QuickCheck.Random.QCGen) (eta1 :: GHC.Types.Int) ->
                 case eta1 of ww { GHC.Types.I# ww1 ->
                 Test.QuickCheck.Gen.$wlistOf
                   @ GHC.Types.Bool
                   Test.QuickCheck.Arbitrary.$fArbitraryBool2
                     `cast`
                   (Sym (Test.QuickCheck.Gen.N:Gen[0] <GHC.Types.Bool>_R))
                   eta
                   ww1 }) -}
d6831ef04cb9301b090dfae6f7bb7ec7
  $trModule :: GHC.Types.Module
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.Module Main.$trModule2 Main.$trModule1) -}
847d9fc3b8e6f0b424199f36b4999bb2
  $trModule1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "Main"#) -}
24ef6042833e75ffd7aa98b83ecca98d
  $trModule2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "main"#) -}
43e7c6ddd016f17f2ec459ec07eea6e8
  main :: GHC.Types.IO ()
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: InlineRule (0, True, True)
                Main.main1 `cast` (Sym (GHC.Types.N:IO[0] <()>_R)) -}
5e3a549d3c33517bf04e460809843f3c
  main1 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: (\ (eta :: GHC.Prim.State#
                             GHC.Prim.RealWorld)[OneShot] ->
                 case Test.Hspec.Core.Runner.hspec2
                        Test.Hspec.Core.Options.defaultConfig
                        Main.main2
                          `cast`
                        (Trans
                             (Sym (GHC.Types.N:IO[0]
                                       <((), [Test.Hspec.Core.Tree.SpecTree ()])>_R))
                             (Trans
                                  (Sym (Control.Monad.Trans.Writer.Lazy.N:WriterT[0]
                                            <[Test.Hspec.Core.Tree.SpecTree ()]>_N
                                            <GHC.Types.IO>_R
                                            <()>_N))
                                  (Sym (Test.Hspec.Core.Spec.Monad.N:SpecM[0] <()>_N) <()>_N)))
                        eta of ds1 { (#,#) ipv ipv1 ->
                 case ipv1 of wild { Test.Hspec.Core.Runner.Summary ds ds2 ->
                 case ds2 of wild1 { GHC.Types.I# x ->
                 case x of wild2 {
                   DEFAULT -> System.Exit.die2 @ () ipv
                   0# -> (# ipv, GHC.Tuple.() #) } } } }) -}
e74f2961557926b826eeb1746afcffac
  main10 ::
    [Test.Hspec.Core.Tree.Tree
       (Test.Hspec.Core.Example.ActionWith ())
       (Test.Hspec.Core.Tree.Item ())]
  {- Unfolding: (GHC.Types.:
                   @ (Test.Hspec.Core.Tree.Tree
                        (Test.Hspec.Core.Example.ActionWith ())
                        (Test.Hspec.Core.Tree.Item ()))
                   Main.main38
                   Main.main11) -}
e441bbab81d14ca516c43cc67899c763
  main100 ::
    Test.Hspec.Core.Tree.Tree
      (Test.Hspec.Core.Example.ActionWith ())
      (Test.Hspec.Core.Tree.Item ())
  {- Unfolding: (Test.Hspec.Core.Tree.Node
                   @ (Test.Hspec.Core.Example.ActionWith ())
                   @ (Test.Hspec.Core.Tree.Item ())
                   Main.main116
                   Main.main101
                     `cast`
                   ([(Test.Hspec.Core.Tree.Tree
                        (Sub (Test.Hspec.Core.Example.D:R:ArgProperty[0])
                         ->_R <GHC.Types.IO ()>_R)
                        (Test.Hspec.Core.Tree.Item
                           (Sub (Test.Hspec.Core.Example.D:R:ArgProperty[0])))_R)_R])_R) -}
fd0bc8cd9470ef266baeec904ea72e09
  main101 ::
    [Test.Hspec.Core.Tree.SpecTree
       (Test.Hspec.Core.Example.Arg Test.QuickCheck.Property.Property)]
  {- Unfolding: (GHC.Types.:
                   @ (Test.Hspec.Core.Tree.SpecTree
                        (Test.Hspec.Core.Example.Arg Test.QuickCheck.Property.Property))
                   Main.main102
                   (GHC.Types.[]
                      @ (Test.Hspec.Core.Tree.SpecTree
                           (Test.Hspec.Core.Example.Arg
                              Test.QuickCheck.Property.Property)))) -}
fc2637765fccf463182071e61fddd277
  main102 ::
    Test.Hspec.Core.Tree.Tree
      (Test.Hspec.Core.Example.ActionWith
         (Test.Hspec.Core.Example.Arg Test.QuickCheck.Property.Property))
      (Test.Hspec.Core.Tree.Item
         (Test.Hspec.Core.Example.Arg Test.QuickCheck.Property.Property))
  {- Unfolding: (Test.Hspec.Core.Tree.Leaf
                   @ (Test.Hspec.Core.Example.ActionWith
                        (Test.Hspec.Core.Example.Arg Test.QuickCheck.Property.Property))
                   @ (Test.Hspec.Core.Tree.Item
                        (Test.Hspec.Core.Example.Arg Test.QuickCheck.Property.Property))
                   Main.main103) -}
abad10e041e2d7a0ee60ccb6c599163f
  main103 ::
    Test.Hspec.Core.Tree.Item
      (Test.Hspec.Core.Example.Arg Test.QuickCheck.Property.Property)
  {- Unfolding: (Test.Hspec.Core.Tree.Item
                   @ (Test.Hspec.Core.Example.Arg Test.QuickCheck.Property.Property)
                   Main.main114
                   Main.main106
                   GHC.Types.False
                   Main.main104
                     `cast`
                   (<Test.Hspec.Core.Example.Params>_R
                    ->_R <Test.Hspec.Core.Example.ActionWith
                            (Test.Hspec.Core.Example.Arg Test.QuickCheck.Property.Property)
                          -> GHC.Types.IO ()>_R
                    ->_R <Test.Hspec.Core.Example.ProgressCallback>_R
                    ->_R Sym (GHC.Types.N:IO[0]
                                  <Data.Either.Either
                                     GHC.Exception.SomeException
                                     Test.Hspec.Core.Example.Result>_R))) -}
8eecd594f269e1b7b2f752f3c1ddf3cd
  main104 ::
    Test.Hspec.Core.Example.Params
    -> (Test.Hspec.Core.Example.ActionWith
          (Test.Hspec.Core.Example.Arg Test.QuickCheck.Property.Property)
        -> GHC.Types.IO ())
    -> Test.Hspec.Core.Example.ProgressCallback
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Data.Either.Either
            GHC.Exception.SomeException Test.Hspec.Core.Example.Result #)
  {- Arity: 4,
     Unfolding: (Test.Hspec.Core.Example.safeEvaluateExample1
                   @ Test.QuickCheck.Property.Property
                   Test.Hspec.Core.Example.$fExampleProperty1
                     `cast`
                   (Trans
                        (<Test.QuickCheck.Property.Property>_R
                         ->_R <Test.Hspec.Core.Example.Params>_R
                         ->_R ((Trans
                                    (Sub (Test.Hspec.Core.Example.D:R:Arg(->)[0] <()>_N))
                                    (Sub (Sym (Test.Hspec.Core.Example.D:R:ArgProperty[0])))
                                ->_R <GHC.Types.IO ()>_R)
                               ->_R <GHC.Types.IO ()>_R)
                         ->_R <Test.Hspec.Core.Example.ProgressCallback>_R
                         ->_R Sym (GHC.Types.N:IO[0] <Test.Hspec.Core.Example.Result>_R))
                        (Sym (Test.Hspec.Core.Example.N:Example[0]
                                  <Test.QuickCheck.Property.Property>_N)))
                   Main.main105
                     `cast`
                   (Trans
                        (Sym (Test.QuickCheck.Gen.N:Gen[0]
                                  (Test.QuickCheck.Property.N:Prop[0])))
                        (Sym (Test.QuickCheck.Property.N:Property[0])))) -}
134953002512b779b747a821111e24e4
  main105 ::
    Test.QuickCheck.Random.QCGen
    -> GHC.Types.Int
    -> Test.QuickCheck.Property.Rose Test.QuickCheck.Property.Result
  {- Arity: 2,
     Unfolding: (\ (eta :: Test.QuickCheck.Random.QCGen)
                   (eta1 :: GHC.Types.Int) ->
                 Test.QuickCheck.Property.$fTestable(->)2
                   @ [GHC.Types.Bool]
                   @ Test.QuickCheck.Property.Property
                   Main.$s$fShow[]
                   Test.QuickCheck.Property.$fTestable(->)6
                     `cast`
                   (Trans
                        (<Test.QuickCheck.Property.Property>_R
                         ->_R Trans
                                  (Sym (Test.QuickCheck.Gen.N:Gen[0]
                                            (Test.QuickCheck.Property.N:Prop[0])))
                                  (Sym (Test.QuickCheck.Property.N:Property[0])))
                        (Sym (Test.QuickCheck.Property.N:Testable[0]
                                  <Test.QuickCheck.Property.Property>_N)))
                   Main.$sproperty8
                     `cast`
                   (Sym (Test.QuickCheck.Gen.N:Gen[0] <[GHC.Types.Bool]>_R))
                   Main.$s$fArbitrary[]_$s$fArbitrary[]_$cshrink2
                   Main.main_f1
                   eta
                   eta1) -}
f90e7f24b1c86f500792018b1b10d27d
  main106 :: GHC.Base.Maybe Test.Hspec.Core.Example.Location
  {- Unfolding: (case GHC.List.reverse1
                        @ (GHC.Base.String, GHC.Stack.Types.SrcLoc)
                        Main.main107
                        (GHC.Types.[]
                           @ (GHC.Base.String, GHC.Stack.Types.SrcLoc)) of wild {
                   [] -> GHC.Base.Nothing @ Test.Hspec.Core.Example.Location
                   : ds ds1
                   -> case ds of wild2 { (,) ds2 loc ->
                      GHC.Base.Just
                        @ Test.Hspec.Core.Example.Location
                        (Test.Hspec.Core.Example.Location
                           (GHC.Stack.Types.srcLocFile loc)
                           (GHC.Stack.Types.srcLocStartLine loc)
                           (GHC.Stack.Types.srcLocStartCol loc)
                           Test.Hspec.Core.Example.ExactLocation) } }) -}
59692d61fbab05ac58a6a8b22dc94ccd
  main107 :: [([GHC.Types.Char], GHC.Stack.Types.SrcLoc)]
  {- Unfolding: (Data.CallStack.$wunsafeDrop
                   @ ([GHC.Types.Char], GHC.Stack.Types.SrcLoc)
                   1#
                   Main.main108) -}
5e19c82eb126abfce26c475b34c070ab
  main108 :: [([GHC.Types.Char], GHC.Stack.Types.SrcLoc)]
  {- Unfolding: (GHC.Stack.Types.getCallStack Main.main109) -}
b8443dc47b1585b036d3b14cd34a863c
  main109 :: GHC.Stack.Types.CallStack
  {- Unfolding: (GHC.Stack.Types.PushCallStack
                   Test.Hspec.Core.Tree.specItem9
                   Test.Hspec.Core.Tree.specItem2
                   Main.main110) -}
46f27f2071d0abe89b4f386ef2a6c5e7
  main11 ::
    [Test.Hspec.Core.Tree.Tree
       (Test.Hspec.Core.Example.ActionWith ())
       (Test.Hspec.Core.Tree.Item ())]
  {- Unfolding: (GHC.Types.:
                   @ (Test.Hspec.Core.Tree.Tree
                        (Test.Hspec.Core.Example.ActionWith ())
                        (Test.Hspec.Core.Tree.Item ()))
                   Main.main12
                   (GHC.Types.[]
                      @ (Test.Hspec.Core.Tree.Tree
                           (Test.Hspec.Core.Example.ActionWith ())
                           (Test.Hspec.Core.Tree.Item ())))) -}
a161e968b413dd8cbcf957a889c4f04f
  main110 :: GHC.Stack.Types.CallStack
  {- Unfolding: (GHC.Stack.Types.PushCallStack
                   Test.Hspec.Core.Spec.it9
                   Test.Hspec.Core.Spec.it2
                   Main.main111) -}
0a5cb940ee65ba78cd858412afa70542
  main111 :: GHC.Stack.Types.CallStack
  {- Unfolding: (GHC.Stack.Types.PushCallStack
                   Main.main31
                   Main.main112
                   GHC.Stack.Types.EmptyCallStack) -}
503fbbfed2eef5f7a0aecfed62db41b8
  main112 :: GHC.Stack.Types.SrcLoc
  {- Unfolding: (GHC.Stack.Types.SrcLoc
                   Main.main30
                   Main.main29
                   Main.main28
                   Main.main113
                   Main.main26
                   Main.main113
                   Main.main84) -}
9cde080630e5e10fee69c4a6037909c4
  main113 :: GHC.Types.Int
  {- HasNoCafRefs, Unfolding: (GHC.Types.I# 36#) -}
3708c79b58be1298a9facc9644740c5c
  main114 :: [GHC.Types.Char]
  {- Unfolding: (GHC.Types.:
                   @ GHC.Types.Char
                   Main.main34
                   Main.main115) -}
80c9bd7e820ffd265fefa061ca134091
  main115 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   "1' with nonempty list"#) -}
43c31b1cca677d5e664db723a0f103fc
  main116 :: [GHC.Types.Char]
  {- Unfolding: (GHC.Types.:
                   @ GHC.Types.Char
                   Main.main37
                   Main.main117) -}
46ffd045ccb33319956a49d9c86350fb
  main117 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   "esting properties of p1'"#) -}
7baf16efb6e5d3b093d298719df909d2
  main118 ::
    Test.Hspec.Core.Tree.Tree
      (Test.Hspec.Core.Example.ActionWith ())
      (Test.Hspec.Core.Tree.Item ())
  {- Unfolding: (Test.Hspec.Core.Tree.Node
                   @ (Test.Hspec.Core.Example.ActionWith ())
                   @ (Test.Hspec.Core.Tree.Item ())
                   Main.main159
                   Main.main119) -}
2b16139a7fca4567606fe7486f6ecb06
  main119 ::
    [Test.Hspec.Core.Tree.Tree
       (Test.Hspec.Core.Example.ActionWith ())
       (Test.Hspec.Core.Tree.Item ())]
  {- Unfolding: (GHC.Base.++
                   @ (Test.Hspec.Core.Tree.Tree
                        (Test.Hspec.Core.Example.ActionWith ())
                        (Test.Hspec.Core.Tree.Item ()))
                   Main.main138
                     `cast`
                   ([(Test.Hspec.Core.Tree.Tree
                        (Sub (Test.Hspec.Core.Example.D:R:ArgIO[0])
                         ->_R <GHC.Types.IO ()>_R)
                        (Test.Hspec.Core.Tree.Item
                           (Sub (Test.Hspec.Core.Example.D:R:ArgIO[0])))_R)_R])_R
                   Main.main120
                     `cast`
                   ([(Test.Hspec.Core.Tree.Tree
                        (Sub (Test.Hspec.Core.Example.D:R:ArgIO[0])
                         ->_R <GHC.Types.IO ()>_R)
                        (Test.Hspec.Core.Tree.Item
                           (Sub (Test.Hspec.Core.Example.D:R:ArgIO[0])))_R)_R])_R) -}
9772c4e9a5bf3c7d35f72a421ee225fe
  main12 ::
    Test.Hspec.Core.Tree.Tree
      (Test.Hspec.Core.Example.ActionWith ())
      (Test.Hspec.Core.Tree.Item ())
  {- Unfolding: (Test.Hspec.Core.Tree.Node
                   @ (Test.Hspec.Core.Example.ActionWith ())
                   @ (Test.Hspec.Core.Tree.Item ())
                   Main.main35
                   Main.main13
                     `cast`
                   ([(Test.Hspec.Core.Tree.Tree
                        (Sub (Test.Hspec.Core.Example.D:R:ArgProperty[0])
                         ->_R <GHC.Types.IO ()>_R)
                        (Test.Hspec.Core.Tree.Item
                           (Sub (Test.Hspec.Core.Example.D:R:ArgProperty[0])))_R)_R])_R) -}
bbeb30eb386432003a61d4980c9220e7
  main120 ::
    [Test.Hspec.Core.Tree.SpecTree
       (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation)]
  {- Unfolding: (GHC.Types.:
                   @ (Test.Hspec.Core.Tree.SpecTree
                        (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation))
                   Main.main121
                   (GHC.Types.[]
                      @ (Test.Hspec.Core.Tree.SpecTree
                           (Test.Hspec.Core.Example.Arg
                              Test.Hspec.Expectations.Expectation)))) -}
dbbf8cd894e7912b936158f7fbe92916
  main121 ::
    Test.Hspec.Core.Tree.Tree
      (Test.Hspec.Core.Example.ActionWith
         (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation))
      (Test.Hspec.Core.Tree.Item
         (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation))
  {- Unfolding: (Test.Hspec.Core.Tree.Leaf
                   @ (Test.Hspec.Core.Example.ActionWith
                        (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation))
                   @ (Test.Hspec.Core.Tree.Item
                        (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation))
                   Main.main122) -}
0dfb9bbf045a3ffab8a78d5377aca803
  main122 ::
    Test.Hspec.Core.Tree.Item
      (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation)
  {- Unfolding: (Test.Hspec.Core.Tree.Item
                   @ (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation)
                   Main.main136
                   Main.main128
                   GHC.Types.False
                   Main.main123
                     `cast`
                   (<Test.Hspec.Core.Example.Params>_R
                    ->_R <Test.Hspec.Core.Example.ActionWith
                            (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation)
                          -> GHC.Types.IO ()>_R
                    ->_R <Test.Hspec.Core.Example.ProgressCallback>_R
                    ->_R Sym (GHC.Types.N:IO[0]
                                  <Data.Either.Either
                                     GHC.Exception.SomeException
                                     Test.Hspec.Core.Example.Result>_R))) -}
901e6610cbbe11401b5815b4e4ea1cdd
  main123 ::
    Test.Hspec.Core.Example.Params
    -> (Test.Hspec.Core.Example.ActionWith
          (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation)
        -> GHC.Types.IO ())
    -> Test.Hspec.Core.Example.ProgressCallback
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Data.Either.Either
            GHC.Exception.SomeException Test.Hspec.Core.Example.Result #)
  {- Arity: 4,
     Unfolding: (Test.Hspec.Core.Example.safeEvaluateExample1
                   @ Test.Hspec.Expectations.Expectation
                   Test.Hspec.Core.Example.$fExampleIO1
                     `cast`
                   (Trans
                        (<Test.Hspec.Expectations.Expectation>_R
                         ->_R <Test.Hspec.Core.Example.Params>_R
                         ->_R ((Trans
                                    (Sub (Test.Hspec.Core.Example.D:R:Arg(->)0[0] <()>_N))
                                    (Sub (Sym (Test.Hspec.Core.Example.D:R:ArgIO[0])))
                                ->_R <GHC.Types.IO ()>_R)
                               ->_R <GHC.Types.IO ()>_R)
                         ->_R <Test.Hspec.Core.Example.ProgressCallback>_R
                         ->_R Sym (GHC.Types.N:IO[0] <Test.Hspec.Core.Example.Result>_R))
                        (Sym (Test.Hspec.Core.Example.N:Example[0]
                                  <Test.Hspec.Expectations.Expectation>_N)))
                   Main.main124) -}
9c7d721f46a915fa22525e0b1423b624
  main124 :: Test.Hspec.Expectations.Expectation
  {- Unfolding: (Main.main125
                   Main.main45 `cast` (Sym (GHC.Types.N:IO[0] <GHC.Prim.Any>_R))
                   Test.Hspec.Expectations.anyException) -}
f5da5fa19d21f2878cf440ffbe99a49e
  main125 ::
    GHC.Types.IO GHC.Prim.Any
    -> Test.Hspec.Expectations.Selector GHC.Exception.SomeException
    -> Test.Hspec.Expectations.Expectation
  {- Unfolding: (Test.Hspec.Expectations.shouldThrow
                   @ GHC.Exception.SomeException
                   @ GHC.Prim.Any
                   Main.main126
                     `cast`
                   (Sym (GHC.Classes.N:IP[0]
                             <"callStack">_N <GHC.Stack.Types.CallStack>_N))
                   GHC.Exception.$fExceptionSomeException) -}
a58ce07498b35b280d9501d87272d004
  main126 :: GHC.Stack.Types.CallStack
  {- Unfolding: (GHC.Stack.Types.PushCallStack
                   Main.main53
                   Main.main127
                   GHC.Stack.Types.EmptyCallStack) -}
39134f0c3cbe1fc9199c3f53d08b89d5
  main127 :: GHC.Stack.Types.SrcLoc
  {- Unfolding: (GHC.Stack.Types.SrcLoc
                   Main.main30
                   Main.main29
                   Main.main28
                   Main.main25
                   Main.main51
                   Main.main25
                   Main.main50) -}
7ae510b7dc0b0622887bd6dda5c97740
  main128 :: GHC.Base.Maybe Test.Hspec.Core.Example.Location
  {- Unfolding: (case GHC.List.reverse1
                        @ (GHC.Base.String, GHC.Stack.Types.SrcLoc)
                        Main.main129
                        (GHC.Types.[]
                           @ (GHC.Base.String, GHC.Stack.Types.SrcLoc)) of wild {
                   [] -> GHC.Base.Nothing @ Test.Hspec.Core.Example.Location
                   : ds ds1
                   -> case ds of wild2 { (,) ds2 loc ->
                      GHC.Base.Just
                        @ Test.Hspec.Core.Example.Location
                        (Test.Hspec.Core.Example.Location
                           (case loc of wild1 { GHC.Stack.Types.SrcLoc ds4 ds5 ds3 ds6 ds7 ds8 ds9 ->
                            ds3 })
                           (case loc of wild1 { GHC.Stack.Types.SrcLoc ds4 ds5 ds3 ds6 ds7 ds8 ds9 ->
                            ds6 })
                           (case loc of wild1 { GHC.Stack.Types.SrcLoc ds4 ds5 ds3 ds6 ds7 ds8 ds9 ->
                            ds7 })
                           Test.Hspec.Core.Example.ExactLocation) } }) -}
971446454d042fee695f561844f5767f
  main129 :: [([GHC.Types.Char], GHC.Stack.Types.SrcLoc)]
  {- Unfolding: (Data.CallStack.$wunsafeDrop
                   @ ([GHC.Types.Char], GHC.Stack.Types.SrcLoc)
                   1#
                   Main.main130) -}
8fabc2d843c4d7d8dd92a5c1adfb6716
  main13 ::
    [Test.Hspec.Core.Tree.SpecTree
       (Test.Hspec.Core.Example.Arg Test.QuickCheck.Property.Property)]
  {- Unfolding: (GHC.Types.:
                   @ (Test.Hspec.Core.Tree.SpecTree
                        (Test.Hspec.Core.Example.Arg Test.QuickCheck.Property.Property))
                   Main.main14
                   (GHC.Types.[]
                      @ (Test.Hspec.Core.Tree.SpecTree
                           (Test.Hspec.Core.Example.Arg
                              Test.QuickCheck.Property.Property)))) -}
917c1abbd3988f79a15fa1ca67f2cea1
  main130 :: [([GHC.Types.Char], GHC.Stack.Types.SrcLoc)]
  {- Unfolding: (GHC.Stack.Types.getCallStack Main.main131) -}
8cd62eccf1b657e4b8d77547d33ec847
  main131 :: GHC.Stack.Types.CallStack
  {- Unfolding: (GHC.Stack.Types.PushCallStack
                   Test.Hspec.Core.Tree.specItem9
                   Test.Hspec.Core.Tree.specItem2
                   Main.main132) -}
a41dd9d7c3642636e8df875aea4df4c8
  main132 :: GHC.Stack.Types.CallStack
  {- Unfolding: (GHC.Stack.Types.PushCallStack
                   Test.Hspec.Core.Spec.it9
                   Test.Hspec.Core.Spec.it2
                   Main.main133) -}
528dbe94455a68193085652a97eb0ea7
  main133 :: GHC.Stack.Types.CallStack
  {- Unfolding: (GHC.Stack.Types.PushCallStack
                   Main.main31
                   Main.main134
                   GHC.Stack.Types.EmptyCallStack) -}
a6b2503a97919378a85d7b4385cabe06
  main134 :: GHC.Stack.Types.SrcLoc
  {- Unfolding: (GHC.Stack.Types.SrcLoc
                   Main.main30
                   Main.main29
                   Main.main28
                   Main.main84
                   Main.main26
                   Main.main84
                   Main.main135) -}
f4a5615ff4b49b01267a0aef7599dd64
  main135 :: GHC.Types.Int
  {- HasNoCafRefs, Unfolding: (GHC.Types.I# 22#) -}
ed3c12d85dd861cbb9ccdbb4f47ac55d
  main136 :: [GHC.Types.Char]
  {- Unfolding: (GHC.Types.:
                   @ GHC.Types.Char
                   Main.main34
                   Main.main137) -}
e0f07dc323750f69048c73a1a3967c8b
  main137 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "1' with []"#) -}
804989159de2e4a8ae652ed7e313b50e
  main138 ::
    [Test.Hspec.Core.Tree.SpecTree
       (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation)]
  {- Unfolding: (GHC.Types.:
                   @ (Test.Hspec.Core.Tree.SpecTree
                        (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation))
                   Main.main139
                   (GHC.Types.[]
                      @ (Test.Hspec.Core.Tree.SpecTree
                           (Test.Hspec.Core.Example.Arg
                              Test.Hspec.Expectations.Expectation)))) -}
28364e3f28b30594b96faed5f8fe0c48
  main139 ::
    Test.Hspec.Core.Tree.Tree
      (Test.Hspec.Core.Example.ActionWith
         (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation))
      (Test.Hspec.Core.Tree.Item
         (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation))
  {- Unfolding: (Test.Hspec.Core.Tree.Leaf
                   @ (Test.Hspec.Core.Example.ActionWith
                        (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation))
                   @ (Test.Hspec.Core.Tree.Item
                        (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation))
                   Main.main140) -}
04c907890388a9f63a1d3c712539af0a
  main14 ::
    Test.Hspec.Core.Tree.Tree
      (Test.Hspec.Core.Example.ActionWith
         (Test.Hspec.Core.Example.Arg Test.QuickCheck.Property.Property))
      (Test.Hspec.Core.Tree.Item
         (Test.Hspec.Core.Example.Arg Test.QuickCheck.Property.Property))
  {- Unfolding: (Test.Hspec.Core.Tree.Leaf
                   @ (Test.Hspec.Core.Example.ActionWith
                        (Test.Hspec.Core.Example.Arg Test.QuickCheck.Property.Property))
                   @ (Test.Hspec.Core.Tree.Item
                        (Test.Hspec.Core.Example.Arg Test.QuickCheck.Property.Property))
                   Main.main15) -}
f4f6fa6049b3c6b2f75353b5e1e89238
  main140 ::
    Test.Hspec.Core.Tree.Item
      (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation)
  {- Unfolding: (Test.Hspec.Core.Tree.Item
                   @ (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation)
                   Main.main157
                   Main.main149
                   GHC.Types.False
                   Main.main141
                     `cast`
                   (<Test.Hspec.Core.Example.Params>_R
                    ->_R <Test.Hspec.Core.Example.ActionWith
                            (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation)
                          -> GHC.Types.IO ()>_R
                    ->_R <Test.Hspec.Core.Example.ProgressCallback>_R
                    ->_R Sym (GHC.Types.N:IO[0]
                                  <Data.Either.Either
                                     GHC.Exception.SomeException
                                     Test.Hspec.Core.Example.Result>_R))) -}
58402643c559b58dd406041ae19ed669
  main141 ::
    Test.Hspec.Core.Example.Params
    -> (Test.Hspec.Core.Example.ActionWith
          (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation)
        -> GHC.Types.IO ())
    -> Test.Hspec.Core.Example.ProgressCallback
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Data.Either.Either
            GHC.Exception.SomeException Test.Hspec.Core.Example.Result #)
  {- Arity: 4,
     Unfolding: (Test.Hspec.Core.Example.safeEvaluateExample1
                   @ Test.Hspec.Expectations.Expectation
                   Test.Hspec.Core.Example.$fExampleIO1
                     `cast`
                   (Trans
                        (<Test.Hspec.Expectations.Expectation>_R
                         ->_R <Test.Hspec.Core.Example.Params>_R
                         ->_R ((Trans
                                    (Sub (Test.Hspec.Core.Example.D:R:Arg(->)0[0] <()>_N))
                                    (Sub (Sym (Test.Hspec.Core.Example.D:R:ArgIO[0])))
                                ->_R <GHC.Types.IO ()>_R)
                               ->_R <GHC.Types.IO ()>_R)
                         ->_R <Test.Hspec.Core.Example.ProgressCallback>_R
                         ->_R Sym (GHC.Types.N:IO[0] <Test.Hspec.Core.Example.Result>_R))
                        (Sym (Test.Hspec.Core.Example.N:Example[0]
                                  <Test.Hspec.Expectations.Expectation>_N)))
                   Main.main142) -}
78a06148f38286d849ea4c4aa895fd76
  main142 :: Test.HUnit.Lang.Assertion
  {- Unfolding: (Main.main143
                   (GHC.Types.[] @ GHC.Types.Char)
                   Main.main75
                   Main.main70) -}
3dff22c40a25b31b529a9813f2d313d0
  main143 ::
    GHC.Base.String
    -> GHC.Integer.Type.Integer
    -> GHC.Integer.Type.Integer
    -> Test.HUnit.Lang.Assertion
  {- Unfolding: (Test.HUnit.Lang.assertEqual
                   @ GHC.Integer.Type.Integer
                   Main.main144
                     `cast`
                   (Sym (GHC.Classes.N:IP[0]
                             <"callStack">_N <GHC.Stack.Types.CallStack>_N))
                   GHC.Integer.Type.$fEqInteger
                   GHC.Show.$fShowInteger) -}
ceed95b3f8040db2979fa4ca6bd1c03f
  main144 :: GHC.Stack.Types.CallStack
  {- Unfolding: (GHC.Stack.Types.PushCallStack
                   Test.HUnit.Base.@=?5
                   Test.HUnit.Base.@?=1
                   Main.main145) -}
7b50f7933f445eed9786b13ad7f10dcf
  main145 :: GHC.Stack.Types.CallStack
  {- Unfolding: (GHC.Stack.Types.PushCallStack
                   Test.Hspec.Expectations.shouldBe5
                   Test.Hspec.Expectations.shouldBe1
                   Main.main146) -}
6ef3836f4f335f4432dd55c30bcb7583
  main146 :: GHC.Stack.Types.CallStack
  {- Unfolding: (GHC.Stack.Types.PushCallStack
                   Main.main86
                   Main.main147
                   GHC.Stack.Types.EmptyCallStack) -}
c34a03b3f590daffdda7948eb53a9828
  main147 :: GHC.Stack.Types.SrcLoc
  {- Unfolding: (GHC.Stack.Types.SrcLoc
                   Main.main30
                   Main.main29
                   Main.main28
                   Main.main148
                   Main.main51
                   Main.main148
                   Main.main84) -}
095376503892d605a8d757c48126883e
  main148 :: GHC.Types.Int
  {- HasNoCafRefs, Unfolding: (GHC.Types.I# 32#) -}
ce670dc21b58cc6b8fd375f694cbb2c8
  main149 :: GHC.Base.Maybe Test.Hspec.Core.Example.Location
  {- Unfolding: (case GHC.List.reverse1
                        @ (GHC.Base.String, GHC.Stack.Types.SrcLoc)
                        Main.main150
                        (GHC.Types.[]
                           @ (GHC.Base.String, GHC.Stack.Types.SrcLoc)) of wild {
                   [] -> GHC.Base.Nothing @ Test.Hspec.Core.Example.Location
                   : ds ds1
                   -> case ds of wild2 { (,) ds2 loc ->
                      GHC.Base.Just
                        @ Test.Hspec.Core.Example.Location
                        (Test.Hspec.Core.Example.Location
                           (case loc of wild1 { GHC.Stack.Types.SrcLoc ds4 ds5 ds3 ds6 ds7 ds8 ds9 ->
                            ds3 })
                           (case loc of wild1 { GHC.Stack.Types.SrcLoc ds4 ds5 ds3 ds6 ds7 ds8 ds9 ->
                            ds6 })
                           (case loc of wild1 { GHC.Stack.Types.SrcLoc ds4 ds5 ds3 ds6 ds7 ds8 ds9 ->
                            ds7 })
                           Test.Hspec.Core.Example.ExactLocation) } }) -}
bdef9b4473036765130c25bd43091329
  main15 ::
    Test.Hspec.Core.Tree.Item
      (Test.Hspec.Core.Example.Arg Test.QuickCheck.Property.Property)
  {- Unfolding: (Test.Hspec.Core.Tree.Item
                   @ (Test.Hspec.Core.Example.Arg Test.QuickCheck.Property.Property)
                   Main.main32
                   Main.main18
                   GHC.Types.False
                   Main.main16
                     `cast`
                   (<Test.Hspec.Core.Example.Params>_R
                    ->_R <Test.Hspec.Core.Example.ActionWith
                            (Test.Hspec.Core.Example.Arg Test.QuickCheck.Property.Property)
                          -> GHC.Types.IO ()>_R
                    ->_R <Test.Hspec.Core.Example.ProgressCallback>_R
                    ->_R Sym (GHC.Types.N:IO[0]
                                  <Data.Either.Either
                                     GHC.Exception.SomeException
                                     Test.Hspec.Core.Example.Result>_R))) -}
9ab0618408bc44e5c94661a8e50f11e4
  main150 :: [([GHC.Types.Char], GHC.Stack.Types.SrcLoc)]
  {- Unfolding: (Data.CallStack.$wunsafeDrop
                   @ ([GHC.Types.Char], GHC.Stack.Types.SrcLoc)
                   1#
                   Main.main151) -}
6965b70ec5a2af5e040e70389986d07d
  main151 :: [([GHC.Types.Char], GHC.Stack.Types.SrcLoc)]
  {- Unfolding: (GHC.Stack.Types.getCallStack Main.main152) -}
cca1b6f01d3c552eabb38c5b0b37bc9a
  main152 :: GHC.Stack.Types.CallStack
  {- Unfolding: (GHC.Stack.Types.PushCallStack
                   Test.Hspec.Core.Tree.specItem9
                   Test.Hspec.Core.Tree.specItem2
                   Main.main153) -}
f03b24278bbfc531bfb2a4d12de817f5
  main153 :: GHC.Stack.Types.CallStack
  {- Unfolding: (GHC.Stack.Types.PushCallStack
                   Test.Hspec.Core.Spec.it9
                   Test.Hspec.Core.Spec.it2
                   Main.main154) -}
b66e919bf89478b63c8b6f0ba332094d
  main154 :: GHC.Stack.Types.CallStack
  {- Unfolding: (GHC.Stack.Types.PushCallStack
                   Main.main31
                   Main.main155
                   GHC.Stack.Types.EmptyCallStack) -}
db0f17f56411c4d9b748197a22f27f58
  main155 :: GHC.Stack.Types.SrcLoc
  {- Unfolding: (GHC.Stack.Types.SrcLoc
                   Main.main30
                   Main.main29
                   Main.main28
                   Main.main94
                   Main.main26
                   Main.main94
                   Main.main156) -}
042eec385c78fa8bbad20b0dccd293d1
  main156 :: GHC.Types.Int
  {- HasNoCafRefs, Unfolding: (GHC.Types.I# 29#) -}
0ccfc25837f43c9735e40effa193d59d
  main157 :: [GHC.Types.Char]
  {- Unfolding: (GHC.Types.:
                   @ GHC.Types.Char
                   Main.main34
                   Main.main158) -}
943b9c5642717f605c387aa4e8d6b37a
  main158 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "1' with [1,2,3,4]"#) -}
13af10704ce1ea27d907b54a89beaa33
  main159 :: [GHC.Types.Char]
  {- Unfolding: (GHC.Types.:
                   @ GHC.Types.Char
                   Main.main37
                   Main.main160) -}
3a1b042bec7ee656b14ff90a51f986ce
  main16 ::
    Test.Hspec.Core.Example.Params
    -> (Test.Hspec.Core.Example.ActionWith
          (Test.Hspec.Core.Example.Arg Test.QuickCheck.Property.Property)
        -> GHC.Types.IO ())
    -> Test.Hspec.Core.Example.ProgressCallback
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Data.Either.Either
            GHC.Exception.SomeException Test.Hspec.Core.Example.Result #)
  {- Arity: 4,
     Unfolding: (Test.Hspec.Core.Example.safeEvaluateExample1
                   @ Test.QuickCheck.Property.Property
                   Test.Hspec.Core.Example.$fExampleProperty1
                     `cast`
                   (Trans
                        (<Test.QuickCheck.Property.Property>_R
                         ->_R <Test.Hspec.Core.Example.Params>_R
                         ->_R ((Trans
                                    (Sub (Test.Hspec.Core.Example.D:R:Arg(->)[0] <()>_N))
                                    (Sub (Sym (Test.Hspec.Core.Example.D:R:ArgProperty[0])))
                                ->_R <GHC.Types.IO ()>_R)
                               ->_R <GHC.Types.IO ()>_R)
                         ->_R <Test.Hspec.Core.Example.ProgressCallback>_R
                         ->_R Sym (GHC.Types.N:IO[0] <Test.Hspec.Core.Example.Result>_R))
                        (Sym (Test.Hspec.Core.Example.N:Example[0]
                                  <Test.QuickCheck.Property.Property>_N)))
                   Main.main17
                     `cast`
                   (Trans
                        (Sym (Test.QuickCheck.Gen.N:Gen[0]
                                  (Test.QuickCheck.Property.N:Prop[0])))
                        (Sym (Test.QuickCheck.Property.N:Property[0])))) -}
a0125bbc1d12809627f46f3af03a9a98
  main160 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "esting version p1'"#) -}
2d3226e520b8ae3617bd5f79ce3be364
  main161 ::
    Test.Hspec.Core.Tree.Tree
      (Test.Hspec.Core.Example.ActionWith ())
      (Test.Hspec.Core.Tree.Item ())
  {- Unfolding: (Test.Hspec.Core.Tree.Node
                   @ (Test.Hspec.Core.Example.ActionWith ())
                   @ (Test.Hspec.Core.Tree.Item ())
                   Main.main177
                   Main.main162
                     `cast`
                   ([(Test.Hspec.Core.Tree.Tree
                        (Sub (Test.Hspec.Core.Example.D:R:ArgProperty[0])
                         ->_R <GHC.Types.IO ()>_R)
                        (Test.Hspec.Core.Tree.Item
                           (Sub (Test.Hspec.Core.Example.D:R:ArgProperty[0])))_R)_R])_R) -}
efd11c8fcb7ff47254645e1e5f322f45
  main162 ::
    [Test.Hspec.Core.Tree.SpecTree
       (Test.Hspec.Core.Example.Arg Test.QuickCheck.Property.Property)]
  {- Unfolding: (GHC.Types.:
                   @ (Test.Hspec.Core.Tree.SpecTree
                        (Test.Hspec.Core.Example.Arg Test.QuickCheck.Property.Property))
                   Main.main163
                   (GHC.Types.[]
                      @ (Test.Hspec.Core.Tree.SpecTree
                           (Test.Hspec.Core.Example.Arg
                              Test.QuickCheck.Property.Property)))) -}
fd0dec79ce5689cd2b621113ac4cc38b
  main163 ::
    Test.Hspec.Core.Tree.Tree
      (Test.Hspec.Core.Example.ActionWith
         (Test.Hspec.Core.Example.Arg Test.QuickCheck.Property.Property))
      (Test.Hspec.Core.Tree.Item
         (Test.Hspec.Core.Example.Arg Test.QuickCheck.Property.Property))
  {- Unfolding: (Test.Hspec.Core.Tree.Leaf
                   @ (Test.Hspec.Core.Example.ActionWith
                        (Test.Hspec.Core.Example.Arg Test.QuickCheck.Property.Property))
                   @ (Test.Hspec.Core.Tree.Item
                        (Test.Hspec.Core.Example.Arg Test.QuickCheck.Property.Property))
                   Main.main164) -}
3362c6d2c97fe25fed0ff48cdd797c7f
  main164 ::
    Test.Hspec.Core.Tree.Item
      (Test.Hspec.Core.Example.Arg Test.QuickCheck.Property.Property)
  {- Unfolding: (Test.Hspec.Core.Tree.Item
                   @ (Test.Hspec.Core.Example.Arg Test.QuickCheck.Property.Property)
                   Main.main175
                   Main.main167
                   GHC.Types.False
                   Main.main165
                     `cast`
                   (<Test.Hspec.Core.Example.Params>_R
                    ->_R <Test.Hspec.Core.Example.ActionWith
                            (Test.Hspec.Core.Example.Arg Test.QuickCheck.Property.Property)
                          -> GHC.Types.IO ()>_R
                    ->_R <Test.Hspec.Core.Example.ProgressCallback>_R
                    ->_R Sym (GHC.Types.N:IO[0]
                                  <Data.Either.Either
                                     GHC.Exception.SomeException
                                     Test.Hspec.Core.Example.Result>_R))) -}
987fd7ab2ee13ec056f4d2014e53f9d7
  main165 ::
    Test.Hspec.Core.Example.Params
    -> (Test.Hspec.Core.Example.ActionWith
          (Test.Hspec.Core.Example.Arg Test.QuickCheck.Property.Property)
        -> GHC.Types.IO ())
    -> Test.Hspec.Core.Example.ProgressCallback
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Data.Either.Either
            GHC.Exception.SomeException Test.Hspec.Core.Example.Result #)
  {- Arity: 4,
     Unfolding: (Test.Hspec.Core.Example.safeEvaluateExample1
                   @ Test.QuickCheck.Property.Property
                   Test.Hspec.Core.Example.$fExampleProperty1
                     `cast`
                   (Trans
                        (<Test.QuickCheck.Property.Property>_R
                         ->_R <Test.Hspec.Core.Example.Params>_R
                         ->_R ((Trans
                                    (Sub (Test.Hspec.Core.Example.D:R:Arg(->)[0] <()>_N))
                                    (Sub (Sym (Test.Hspec.Core.Example.D:R:ArgProperty[0])))
                                ->_R <GHC.Types.IO ()>_R)
                               ->_R <GHC.Types.IO ()>_R)
                         ->_R <Test.Hspec.Core.Example.ProgressCallback>_R
                         ->_R Sym (GHC.Types.N:IO[0] <Test.Hspec.Core.Example.Result>_R))
                        (Sym (Test.Hspec.Core.Example.N:Example[0]
                                  <Test.QuickCheck.Property.Property>_N)))
                   Main.main166
                     `cast`
                   (Trans
                        (Sym (Test.QuickCheck.Gen.N:Gen[0]
                                  (Test.QuickCheck.Property.N:Prop[0])))
                        (Sym (Test.QuickCheck.Property.N:Property[0])))) -}
fcdc6266260ef194d65feffb50c99b37
  main166 ::
    Test.QuickCheck.Random.QCGen
    -> GHC.Types.Int
    -> Test.QuickCheck.Property.Rose Test.QuickCheck.Property.Result
  {- Arity: 2,
     Unfolding: (\ (eta :: Test.QuickCheck.Random.QCGen)
                   (eta1 :: GHC.Types.Int) ->
                 Test.QuickCheck.Property.$fTestable(->)2
                   @ [GHC.Types.Int]
                   @ Test.QuickCheck.Property.Property
                   GHC.Show.$fShow[]_$s$fShow[]
                   Test.QuickCheck.Property.$fTestable(->)6
                     `cast`
                   (Trans
                        (<Test.QuickCheck.Property.Property>_R
                         ->_R Trans
                                  (Sym (Test.QuickCheck.Gen.N:Gen[0]
                                            (Test.QuickCheck.Property.N:Prop[0])))
                                  (Sym (Test.QuickCheck.Property.N:Property[0])))
                        (Sym (Test.QuickCheck.Property.N:Testable[0]
                                  <Test.QuickCheck.Property.Property>_N)))
                   Main.$sproperty2
                     `cast`
                   (Sym (Test.QuickCheck.Gen.N:Gen[0] <[GHC.Types.Int]>_R))
                   Main.$s$fArbitrary[]_$s$fArbitrary[]_$cshrink
                   Main.main_f2
                   eta
                   eta1) -}
ca590a6afe800cc4b63be2e755bf9833
  main167 :: GHC.Base.Maybe Test.Hspec.Core.Example.Location
  {- Unfolding: (case GHC.List.reverse1
                        @ (GHC.Base.String, GHC.Stack.Types.SrcLoc)
                        Main.main168
                        (GHC.Types.[]
                           @ (GHC.Base.String, GHC.Stack.Types.SrcLoc)) of wild {
                   [] -> GHC.Base.Nothing @ Test.Hspec.Core.Example.Location
                   : ds ds1
                   -> case ds of wild2 { (,) ds2 loc ->
                      GHC.Base.Just
                        @ Test.Hspec.Core.Example.Location
                        (Test.Hspec.Core.Example.Location
                           (GHC.Stack.Types.srcLocFile loc)
                           (GHC.Stack.Types.srcLocStartLine loc)
                           (GHC.Stack.Types.srcLocStartCol loc)
                           Test.Hspec.Core.Example.ExactLocation) } }) -}
068730943d3768e519ba686e23885d0c
  main168 :: [([GHC.Types.Char], GHC.Stack.Types.SrcLoc)]
  {- Unfolding: (Data.CallStack.$wunsafeDrop
                   @ ([GHC.Types.Char], GHC.Stack.Types.SrcLoc)
                   1#
                   Main.main169) -}
922ef4382d06828c4b79ffd46348d053
  main169 :: [([GHC.Types.Char], GHC.Stack.Types.SrcLoc)]
  {- Unfolding: (GHC.Stack.Types.getCallStack Main.main170) -}
dac194c747f518c7660be244ba8248a9
  main17 ::
    Test.QuickCheck.Random.QCGen
    -> GHC.Types.Int
    -> Test.QuickCheck.Property.Rose Test.QuickCheck.Property.Result
  {- Arity: 2,
     Unfolding: (\ (eta :: Test.QuickCheck.Random.QCGen)
                   (eta1 :: GHC.Types.Int) ->
                 Test.QuickCheck.Property.$fTestable(->)2
                   @ [GHC.Types.Char]
                   @ Test.QuickCheck.Property.Property
                   GHC.Show.$fShow[]_$s$fShow[]1
                   Test.QuickCheck.Property.$fTestable(->)6
                     `cast`
                   (Trans
                        (<Test.QuickCheck.Property.Property>_R
                         ->_R Trans
                                  (Sym (Test.QuickCheck.Gen.N:Gen[0]
                                            (Test.QuickCheck.Property.N:Prop[0])))
                                  (Sym (Test.QuickCheck.Property.N:Property[0])))
                        (Sym (Test.QuickCheck.Property.N:Testable[0]
                                  <Test.QuickCheck.Property.Property>_N)))
                   Main.$sproperty5
                     `cast`
                   (Sym (Test.QuickCheck.Gen.N:Gen[0] <[GHC.Types.Char]>_R))
                   Main.$s$fArbitrary[]_$s$fArbitrary[]_$cshrink1
                   Main.main_f
                   eta
                   eta1) -}
52a0c27e490b1db35a5e492a8de1ad1e
  main170 :: GHC.Stack.Types.CallStack
  {- Unfolding: (GHC.Stack.Types.PushCallStack
                   Test.Hspec.Core.Tree.specItem9
                   Test.Hspec.Core.Tree.specItem2
                   Main.main171) -}
fafc6882ba58917e6f89ee573f4f082c
  main171 :: GHC.Stack.Types.CallStack
  {- Unfolding: (GHC.Stack.Types.PushCallStack
                   Test.Hspec.Core.Spec.it9
                   Test.Hspec.Core.Spec.it2
                   Main.main172) -}
b01233189e2ed81f44ac5642772c4d79
  main172 :: GHC.Stack.Types.CallStack
  {- Unfolding: (GHC.Stack.Types.PushCallStack
                   Main.main31
                   Main.main173
                   GHC.Stack.Types.EmptyCallStack) -}
405739d9495a4c59daca4a229af5dac0
  main173 :: GHC.Stack.Types.SrcLoc
  {- Unfolding: (GHC.Stack.Types.SrcLoc
                   Main.main30
                   Main.main29
                   Main.main28
                   Main.main174
                   Main.main26
                   Main.main174
                   Main.main94) -}
2db32f35c9d667a05b3bbb2b8e733481
  main174 :: GHC.Types.Int
  {- HasNoCafRefs, Unfolding: (GHC.Types.I# 27#) -}
3c88e2ac510ae1039e8e003afc480dd2
  main175 :: [GHC.Types.Char]
  {- Unfolding: (GHC.Types.:
                   @ GHC.Types.Char
                   Main.main34
                   Main.main176) -}
f1e3c974f745afb0ed432750b883392a
  main176 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   "1 with nonempty list"#) -}
df2918440e06c984025019bc72f65cbd
  main177 :: [GHC.Types.Char]
  {- Unfolding: (GHC.Types.:
                   @ GHC.Types.Char
                   Main.main37
                   Main.main178) -}
e5cf1098651f8fe21b1f6db0d4945e32
  main178 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   "esting porperties of p1"#) -}
224c50268014ff9d05cb08838c8c2208
  main179 ::
    Test.Hspec.Core.Tree.Tree
      (Test.Hspec.Core.Example.ActionWith ())
      (Test.Hspec.Core.Tree.Item ())
  {- Unfolding: (Test.Hspec.Core.Tree.Node
                   @ (Test.Hspec.Core.Example.ActionWith ())
                   @ (Test.Hspec.Core.Tree.Item ())
                   Main.main225
                   Main.main180) -}
0e7532eeac40b89f54fa9265673bece3
  main18 :: GHC.Base.Maybe Test.Hspec.Core.Example.Location
  {- Unfolding: (case GHC.List.reverse1
                        @ (GHC.Base.String, GHC.Stack.Types.SrcLoc)
                        Main.main19
                        (GHC.Types.[]
                           @ (GHC.Base.String, GHC.Stack.Types.SrcLoc)) of wild {
                   [] -> GHC.Base.Nothing @ Test.Hspec.Core.Example.Location
                   : ds ds1
                   -> case ds of wild2 { (,) ds2 loc ->
                      GHC.Base.Just
                        @ Test.Hspec.Core.Example.Location
                        (Test.Hspec.Core.Example.Location
                           (case loc of wild1 { GHC.Stack.Types.SrcLoc ds4 ds5 ds3 ds6 ds7 ds8 ds9 ->
                            ds3 })
                           (case loc of wild1 { GHC.Stack.Types.SrcLoc ds4 ds5 ds3 ds6 ds7 ds8 ds9 ->
                            ds6 })
                           (case loc of wild1 { GHC.Stack.Types.SrcLoc ds4 ds5 ds3 ds6 ds7 ds8 ds9 ->
                            ds7 })
                           Test.Hspec.Core.Example.ExactLocation) } }) -}
273ef739f8a72a274c78a84d415c74e7
  main180 ::
    [Test.Hspec.Core.Tree.Tree
       (Test.Hspec.Core.Example.ActionWith ())
       (Test.Hspec.Core.Tree.Item ())]
  {- Unfolding: (GHC.Base.++
                   @ (Test.Hspec.Core.Tree.Tree
                        (Test.Hspec.Core.Example.ActionWith ())
                        (Test.Hspec.Core.Tree.Item ()))
                   Main.main202
                     `cast`
                   ([(Test.Hspec.Core.Tree.Tree
                        (Sub (Test.Hspec.Core.Example.D:R:ArgIO[0])
                         ->_R <GHC.Types.IO ()>_R)
                        (Test.Hspec.Core.Tree.Item
                           (Sub (Test.Hspec.Core.Example.D:R:ArgIO[0])))_R)_R])_R
                   Main.main181
                     `cast`
                   ([(Test.Hspec.Core.Tree.Tree
                        (Sub (Test.Hspec.Core.Example.D:R:ArgIO[0])
                         ->_R <GHC.Types.IO ()>_R)
                        (Test.Hspec.Core.Tree.Item
                           (Sub (Test.Hspec.Core.Example.D:R:ArgIO[0])))_R)_R])_R) -}
208ca962626b3dc1b9b24c3a80322e46
  main181 ::
    [Test.Hspec.Core.Tree.SpecTree
       (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation)]
  {- Unfolding: (GHC.Types.:
                   @ (Test.Hspec.Core.Tree.SpecTree
                        (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation))
                   Main.main182
                   (GHC.Types.[]
                      @ (Test.Hspec.Core.Tree.SpecTree
                           (Test.Hspec.Core.Example.Arg
                              Test.Hspec.Expectations.Expectation)))) -}
a7ea463abf1c2fd181754055efd8a92b
  main182 ::
    Test.Hspec.Core.Tree.Tree
      (Test.Hspec.Core.Example.ActionWith
         (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation))
      (Test.Hspec.Core.Tree.Item
         (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation))
  {- Unfolding: (Test.Hspec.Core.Tree.Leaf
                   @ (Test.Hspec.Core.Example.ActionWith
                        (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation))
                   @ (Test.Hspec.Core.Tree.Item
                        (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation))
                   Main.main183) -}
212d236c4b86780a5f93c05839a2550d
  main183 ::
    Test.Hspec.Core.Tree.Item
      (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation)
  {- Unfolding: (Test.Hspec.Core.Tree.Item
                   @ (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation)
                   Main.main200
                   Main.main192
                   GHC.Types.False
                   Main.main184
                     `cast`
                   (<Test.Hspec.Core.Example.Params>_R
                    ->_R <Test.Hspec.Core.Example.ActionWith
                            (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation)
                          -> GHC.Types.IO ()>_R
                    ->_R <Test.Hspec.Core.Example.ProgressCallback>_R
                    ->_R Sym (GHC.Types.N:IO[0]
                                  <Data.Either.Either
                                     GHC.Exception.SomeException
                                     Test.Hspec.Core.Example.Result>_R))) -}
899ed1b9230ff6e626724a1235b5b299
  main184 ::
    Test.Hspec.Core.Example.Params
    -> (Test.Hspec.Core.Example.ActionWith
          (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation)
        -> GHC.Types.IO ())
    -> Test.Hspec.Core.Example.ProgressCallback
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Data.Either.Either
            GHC.Exception.SomeException Test.Hspec.Core.Example.Result #)
  {- Arity: 4,
     Unfolding: (Test.Hspec.Core.Example.safeEvaluateExample1
                   @ Test.Hspec.Expectations.Expectation
                   Test.Hspec.Core.Example.$fExampleIO1
                     `cast`
                   (Trans
                        (<Test.Hspec.Expectations.Expectation>_R
                         ->_R <Test.Hspec.Core.Example.Params>_R
                         ->_R ((Trans
                                    (Sub (Test.Hspec.Core.Example.D:R:Arg(->)0[0] <()>_N))
                                    (Sub (Sym (Test.Hspec.Core.Example.D:R:ArgIO[0])))
                                ->_R <GHC.Types.IO ()>_R)
                               ->_R <GHC.Types.IO ()>_R)
                         ->_R <Test.Hspec.Core.Example.ProgressCallback>_R
                         ->_R Sym (GHC.Types.N:IO[0] <Test.Hspec.Core.Example.Result>_R))
                        (Sym (Test.Hspec.Core.Example.N:Example[0]
                                  <Test.Hspec.Expectations.Expectation>_N)))
                   Main.main185) -}
b2290eb3c08ee82a994463868b4096e0
  main185 :: Test.HUnit.Lang.Assertion
  {- Unfolding: (Main.main186
                   (GHC.Types.[] @ GHC.Types.Char)
                   (GHC.Base.Nothing @ GHC.Types.Int)
                   (GHC.Base.Nothing @ GHC.Types.Int)) -}
18abe7fa86080c88526ad7d41a3ea30b
  main186 ::
    GHC.Base.String
    -> GHC.Base.Maybe GHC.Types.Int
    -> GHC.Base.Maybe GHC.Types.Int
    -> Test.HUnit.Lang.Assertion
  {- Unfolding: (Test.HUnit.Lang.assertEqual
                   @ (GHC.Base.Maybe GHC.Types.Int)
                   Main.main187
                     `cast`
                   (Sym (GHC.Classes.N:IP[0]
                             <"callStack">_N <GHC.Stack.Types.CallStack>_N))
                   Main.$s$fEqMaybe
                   Main.$s$fShowMaybe) -}
081282fef6671a08b680843bcceb62f3
  main187 :: GHC.Stack.Types.CallStack
  {- Unfolding: (GHC.Stack.Types.PushCallStack
                   Test.HUnit.Base.@=?5
                   Test.HUnit.Base.@?=1
                   Main.main188) -}
a668b2c4ab4e9d77a2bdeaee88deabc0
  main188 :: GHC.Stack.Types.CallStack
  {- Unfolding: (GHC.Stack.Types.PushCallStack
                   Test.Hspec.Expectations.shouldBe5
                   Test.Hspec.Expectations.shouldBe1
                   Main.main189) -}
c2d34fb71dff519b2cf6d288d5e1d8b6
  main189 :: GHC.Stack.Types.CallStack
  {- Unfolding: (GHC.Stack.Types.PushCallStack
                   Main.main86
                   Main.main190
                   GHC.Stack.Types.EmptyCallStack) -}
f8a32a3d3b87a43df8d747c78d701791
  main19 :: [([GHC.Types.Char], GHC.Stack.Types.SrcLoc)]
  {- Unfolding: (Data.CallStack.$wunsafeDrop
                   @ ([GHC.Types.Char], GHC.Stack.Types.SrcLoc)
                   1#
                   Main.main20) -}
3d50c43d3ea5d704aefb15e69b8e3660
  main190 :: GHC.Stack.Types.SrcLoc
  {- Unfolding: (GHC.Stack.Types.SrcLoc
                   Main.main30
                   Main.main29
                   Main.main28
                   Main.main191
                   Main.main51
                   Main.main191
                   Main.main62) -}
45a5707db5fc5732eb8e910db4ea0fdd
  main191 :: GHC.Types.Int
  {- HasNoCafRefs, Unfolding: (GHC.Types.I# 25#) -}
f51b2932eb29c28b11e8ecdea94dca41
  main192 :: GHC.Base.Maybe Test.Hspec.Core.Example.Location
  {- Unfolding: (case GHC.List.reverse1
                        @ (GHC.Base.String, GHC.Stack.Types.SrcLoc)
                        Main.main193
                        (GHC.Types.[]
                           @ (GHC.Base.String, GHC.Stack.Types.SrcLoc)) of wild {
                   [] -> GHC.Base.Nothing @ Test.Hspec.Core.Example.Location
                   : ds ds1
                   -> case ds of wild2 { (,) ds2 loc ->
                      GHC.Base.Just
                        @ Test.Hspec.Core.Example.Location
                        (Test.Hspec.Core.Example.Location
                           (case loc of wild1 { GHC.Stack.Types.SrcLoc ds4 ds5 ds3 ds6 ds7 ds8 ds9 ->
                            ds3 })
                           (case loc of wild1 { GHC.Stack.Types.SrcLoc ds4 ds5 ds3 ds6 ds7 ds8 ds9 ->
                            ds6 })
                           (case loc of wild1 { GHC.Stack.Types.SrcLoc ds4 ds5 ds3 ds6 ds7 ds8 ds9 ->
                            ds7 })
                           Test.Hspec.Core.Example.ExactLocation) } }) -}
71f3a471f975edabad3fe470175fdc56
  main193 :: [([GHC.Types.Char], GHC.Stack.Types.SrcLoc)]
  {- Unfolding: (Data.CallStack.$wunsafeDrop
                   @ ([GHC.Types.Char], GHC.Stack.Types.SrcLoc)
                   1#
                   Main.main194) -}
8ff09082b1d54fcfc94035e0b333338c
  main194 :: [([GHC.Types.Char], GHC.Stack.Types.SrcLoc)]
  {- Unfolding: (GHC.Stack.Types.getCallStack Main.main195) -}
507a80d146fde852250937778f844589
  main195 :: GHC.Stack.Types.CallStack
  {- Unfolding: (GHC.Stack.Types.PushCallStack
                   Test.Hspec.Core.Tree.specItem9
                   Test.Hspec.Core.Tree.specItem2
                   Main.main196) -}
fcbc718bbbd4f3d8a91c45ff2f8b2a76
  main196 :: GHC.Stack.Types.CallStack
  {- Unfolding: (GHC.Stack.Types.PushCallStack
                   Test.Hspec.Core.Spec.it9
                   Test.Hspec.Core.Spec.it2
                   Main.main197) -}
9d9ebfe4f990a7bafff9ccbf82a9a49e
  main197 :: GHC.Stack.Types.CallStack
  {- Unfolding: (GHC.Stack.Types.PushCallStack
                   Main.main31
                   Main.main198
                   GHC.Stack.Types.EmptyCallStack) -}
bcf8e0fb445c4275e8991ae39eca3126
  main198 :: GHC.Stack.Types.SrcLoc
  {- Unfolding: (GHC.Stack.Types.SrcLoc
                   Main.main30
                   Main.main29
                   Main.main28
                   Main.main61
                   Main.main26
                   Main.main61
                   Main.main199) -}
48877a87d2cab740394253d1a41ea704
  main199 :: GHC.Types.Int
  {- HasNoCafRefs, Unfolding: (GHC.Types.I# 20#) -}
dce1b9d73a24fb61f0d1c1ddaa19e791
  main2 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          ((),
           [Test.Hspec.Core.Tree.Tree
              (Test.Hspec.Core.Example.ActionWith ())
              (Test.Hspec.Core.Tree.Item ())]) #)
  {- Arity: 1,
     Unfolding: (\ (eta :: GHC.Prim.State#
                             GHC.Prim.RealWorld)[OneShot] ->
                 (# eta, Main.main3 #)) -}
8f8c69a128045f95141ae9421876429e
  main20 :: [([GHC.Types.Char], GHC.Stack.Types.SrcLoc)]
  {- Unfolding: (GHC.Stack.Types.getCallStack Main.main21) -}
c1379dde1762589620d8eb82be229a5c
  main200 :: [GHC.Types.Char]
  {- Unfolding: (GHC.Types.:
                   @ GHC.Types.Char
                   Main.main34
                   Main.main201) -}
60a73dce868ba3abd657f55c9a3451f4
  main201 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "1 with []"#) -}
7d60f01e5a9d85e6b1a45dadcc494ed9
  main202 ::
    [Test.Hspec.Core.Tree.SpecTree
       (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation)]
  {- Unfolding: (GHC.Types.:
                   @ (Test.Hspec.Core.Tree.SpecTree
                        (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation))
                   Main.main203
                   (GHC.Types.[]
                      @ (Test.Hspec.Core.Tree.SpecTree
                           (Test.Hspec.Core.Example.Arg
                              Test.Hspec.Expectations.Expectation)))) -}
1dbdebadad02795897b4bc614f42c75d
  main203 ::
    Test.Hspec.Core.Tree.Tree
      (Test.Hspec.Core.Example.ActionWith
         (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation))
      (Test.Hspec.Core.Tree.Item
         (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation))
  {- Unfolding: (Test.Hspec.Core.Tree.Leaf
                   @ (Test.Hspec.Core.Example.ActionWith
                        (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation))
                   @ (Test.Hspec.Core.Tree.Item
                        (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation))
                   Main.main204) -}
4e47385a13b9e8726b4d8c7466f401fc
  main204 ::
    Test.Hspec.Core.Tree.Item
      (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation)
  {- Unfolding: (Test.Hspec.Core.Tree.Item
                   @ (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation)
                   Main.main223
                   Main.main216
                   GHC.Types.False
                   Main.main205
                     `cast`
                   (<Test.Hspec.Core.Example.Params>_R
                    ->_R <Test.Hspec.Core.Example.ActionWith
                            (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation)
                          -> GHC.Types.IO ()>_R
                    ->_R <Test.Hspec.Core.Example.ProgressCallback>_R
                    ->_R Sym (GHC.Types.N:IO[0]
                                  <Data.Either.Either
                                     GHC.Exception.SomeException
                                     Test.Hspec.Core.Example.Result>_R))) -}
44548727e5629d58575bc08a204eac05
  main205 ::
    Test.Hspec.Core.Example.Params
    -> (Test.Hspec.Core.Example.ActionWith
          (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation)
        -> GHC.Types.IO ())
    -> Test.Hspec.Core.Example.ProgressCallback
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Data.Either.Either
            GHC.Exception.SomeException Test.Hspec.Core.Example.Result #)
  {- Arity: 4,
     Unfolding: (Test.Hspec.Core.Example.safeEvaluateExample1
                   @ Test.Hspec.Expectations.Expectation
                   Test.Hspec.Core.Example.$fExampleIO1
                     `cast`
                   (Trans
                        (<Test.Hspec.Expectations.Expectation>_R
                         ->_R <Test.Hspec.Core.Example.Params>_R
                         ->_R ((Trans
                                    (Sub (Test.Hspec.Core.Example.D:R:Arg(->)0[0] <()>_N))
                                    (Sub (Sym (Test.Hspec.Core.Example.D:R:ArgIO[0])))
                                ->_R <GHC.Types.IO ()>_R)
                               ->_R <GHC.Types.IO ()>_R)
                         ->_R <Test.Hspec.Core.Example.ProgressCallback>_R
                         ->_R Sym (GHC.Types.N:IO[0] <Test.Hspec.Core.Example.Result>_R))
                        (Sym (Test.Hspec.Core.Example.N:Example[0]
                                  <Test.Hspec.Expectations.Expectation>_N)))
                   Main.main206) -}
ed682b7c72bea591765b336b2b494095
  main206 :: Test.HUnit.Lang.Assertion
  {- Unfolding: (Main.main209
                   (GHC.Types.[] @ GHC.Types.Char)
                   Main.main208
                   Main.main207) -}
eb6294d8484cdc26ff51aba6bccc1cd7
  main207 :: GHC.Base.Maybe GHC.Integer.Type.Integer
  {- Unfolding: (GHC.Base.Just
                   @ GHC.Integer.Type.Integer
                   Main.main70) -}
38bcff98982ec5626dad0ee36d9d38ad
  main208 :: GHC.Base.Maybe GHC.Integer.Type.Integer
  {- HasNoCafRefs,
     Unfolding: (GHC.Base.Just
                   @ GHC.Integer.Type.Integer
                   Main.main75) -}
26b5fdb0a94f32181146adda350e9723
  main209 ::
    GHC.Base.String
    -> GHC.Base.Maybe GHC.Integer.Type.Integer
    -> GHC.Base.Maybe GHC.Integer.Type.Integer
    -> Test.HUnit.Lang.Assertion
  {- Unfolding: (Test.HUnit.Lang.assertEqual
                   @ (GHC.Base.Maybe GHC.Integer.Type.Integer)
                   Main.main210
                     `cast`
                   (Sym (GHC.Classes.N:IP[0]
                             <"callStack">_N <GHC.Stack.Types.CallStack>_N))
                   Main.$s$fEqMaybe1
                   Main.$s$fShowMaybe1) -}
409b303221dbcc07bbc4674056beef55
  main21 :: GHC.Stack.Types.CallStack
  {- Unfolding: (GHC.Stack.Types.PushCallStack
                   Test.Hspec.Core.Tree.specItem9
                   Test.Hspec.Core.Tree.specItem2
                   Main.main22) -}
7cd304c11c410db3d0f0a39005d437c4
  main210 :: GHC.Stack.Types.CallStack
  {- Unfolding: (GHC.Stack.Types.PushCallStack
                   Test.HUnit.Base.@=?5
                   Test.HUnit.Base.@?=1
                   Main.main211) -}
6b7593e0f28c2d0ea7f877cc6782618a
  main211 :: GHC.Stack.Types.CallStack
  {- Unfolding: (GHC.Stack.Types.PushCallStack
                   Test.Hspec.Expectations.shouldBe5
                   Test.Hspec.Expectations.shouldBe1
                   Main.main212) -}
1ee07384186e244867fa6c46091ce38d
  main212 :: GHC.Stack.Types.CallStack
  {- Unfolding: (GHC.Stack.Types.PushCallStack
                   Main.main86
                   Main.main213
                   GHC.Stack.Types.EmptyCallStack) -}
3fd8e98ff8cde0e0c5a371539db04c55
  main213 :: GHC.Stack.Types.SrcLoc
  {- Unfolding: (GHC.Stack.Types.SrcLoc
                   Main.main30
                   Main.main29
                   Main.main28
                   Main.main215
                   Main.main51
                   Main.main215
                   Main.main214) -}
1a1ec0b8ed48ca60cc5e6a23c1661aac
  main214 :: GHC.Types.Int
  {- HasNoCafRefs, Unfolding: (GHC.Types.I# 37#) -}
40b05fe57e08d27d47591357b2b73054
  main215 :: GHC.Types.Int
  {- HasNoCafRefs, Unfolding: (GHC.Types.I# 23#) -}
88b76ba8605d56ccef6d57bacf808060
  main216 :: GHC.Base.Maybe Test.Hspec.Core.Example.Location
  {- Unfolding: (case GHC.List.reverse1
                        @ (GHC.Base.String, GHC.Stack.Types.SrcLoc)
                        Main.main217
                        (GHC.Types.[]
                           @ (GHC.Base.String, GHC.Stack.Types.SrcLoc)) of wild {
                   [] -> GHC.Base.Nothing @ Test.Hspec.Core.Example.Location
                   : ds ds1
                   -> case ds of wild2 { (,) ds2 loc ->
                      GHC.Base.Just
                        @ Test.Hspec.Core.Example.Location
                        (Test.Hspec.Core.Example.Location
                           (case loc of wild1 { GHC.Stack.Types.SrcLoc ds4 ds5 ds3 ds6 ds7 ds8 ds9 ->
                            ds3 })
                           (case loc of wild1 { GHC.Stack.Types.SrcLoc ds4 ds5 ds3 ds6 ds7 ds8 ds9 ->
                            ds6 })
                           (case loc of wild1 { GHC.Stack.Types.SrcLoc ds4 ds5 ds3 ds6 ds7 ds8 ds9 ->
                            ds7 })
                           Test.Hspec.Core.Example.ExactLocation) } }) -}
611d641d4b2d958cedf1e96c47d0c96c
  main217 :: [([GHC.Types.Char], GHC.Stack.Types.SrcLoc)]
  {- Unfolding: (Data.CallStack.$wunsafeDrop
                   @ ([GHC.Types.Char], GHC.Stack.Types.SrcLoc)
                   1#
                   Main.main218) -}
3189d66b1f5cc9c20283304659d1e3c9
  main218 :: [([GHC.Types.Char], GHC.Stack.Types.SrcLoc)]
  {- Unfolding: (GHC.Stack.Types.getCallStack Main.main219) -}
0c93c8a131c47285f542205c70dfdf18
  main219 :: GHC.Stack.Types.CallStack
  {- Unfolding: (GHC.Stack.Types.PushCallStack
                   Test.Hspec.Core.Tree.specItem9
                   Test.Hspec.Core.Tree.specItem2
                   Main.main220) -}
dcc2973decf25fe83ac129b510ead699
  main22 :: GHC.Stack.Types.CallStack
  {- Unfolding: (GHC.Stack.Types.PushCallStack
                   Test.Hspec.Core.Spec.it9
                   Test.Hspec.Core.Spec.it2
                   Main.main23) -}
3e05d9fdd67a972d66c259ad6b979576
  main220 :: GHC.Stack.Types.CallStack
  {- Unfolding: (GHC.Stack.Types.PushCallStack
                   Test.Hspec.Core.Spec.it9
                   Test.Hspec.Core.Spec.it2
                   Main.main221) -}
86ba1c31f5c80214bceea34df1576b43
  main221 :: GHC.Stack.Types.CallStack
  {- Unfolding: (GHC.Stack.Types.PushCallStack
                   Main.main31
                   Main.main222
                   GHC.Stack.Types.EmptyCallStack) -}
7a04877526f93485834553c9b92b7a9f
  main222 :: GHC.Stack.Types.SrcLoc
  {- Unfolding: (GHC.Stack.Types.SrcLoc
                   Main.main30
                   Main.main29
                   Main.main28
                   Main.main135
                   Main.main26
                   Main.main135
                   Main.main174) -}
bf808477a15db10a89c50bcc40538f06
  main223 :: [GHC.Types.Char]
  {- Unfolding: (GHC.Types.:
                   @ GHC.Types.Char
                   Main.main34
                   Main.main224) -}
45c5e3af4068348ad66eabe7dda49cf7
  main224 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "1 with [1,2,3,4]"#) -}
4a1fb7c36ae715a58b3bb6ad4baffcce
  main225 :: [GHC.Types.Char]
  {- Unfolding: (GHC.Types.:
                   @ GHC.Types.Char
                   Main.main37
                   Main.main226) -}
1460488165431154af3181236ce6ad86
  main226 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "esting version p1"#) -}
896f7f182e52d962ad830257a320b2ce
  main227 :: [GHC.Types.Char]
  {- Unfolding: (GHC.Types.:
                   @ GHC.Types.Char
                   Main.main229
                   Main.main228) -}
fc58bbca88e92554e04dd4c2b03c7daf
  main228 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   "roblem 1: return the last element of a list"#) -}
df0885701a1bf60125c25114c9f7d855
  main229 :: GHC.Types.Char
  {- HasNoCafRefs, Unfolding: (GHC.Types.C# 'P'#) -}
7acf76fc58cabf983d315a1c0f8a9e88
  main23 :: GHC.Stack.Types.CallStack
  {- Unfolding: (GHC.Stack.Types.PushCallStack
                   Main.main31
                   Main.main24
                   GHC.Stack.Types.EmptyCallStack) -}
f8b8f8b7441837086b1a729a7b7a72a4
  main230 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 1,
     Unfolding: (GHC.TopHandler.runMainIO1
                   @ ()
                   Main.main1 `cast` (Sym (GHC.Types.N:IO[0] <()>_R))) -}
29bc238d457122a3c12e3fdf0bc8192e
  main24 :: GHC.Stack.Types.SrcLoc
  {- Unfolding: (GHC.Stack.Types.SrcLoc
                   Main.main30
                   Main.main29
                   Main.main28
                   Main.main27
                   Main.main26
                   Main.main27
                   Main.main25) -}
16a290705d97f7e7f12c52a324658a3c
  main25 :: GHC.Types.Int
  {- HasNoCafRefs, Unfolding: (GHC.Types.I# 34#) -}
99a2f070bb671d9f6f9c6d232cfcc224
  main26 :: GHC.Types.Int
  {- HasNoCafRefs, Unfolding: (GHC.Types.I# 5#) -}
eb3d95db95d5e347e638665b616eaf6c
  main27 :: GHC.Types.Int
  {- HasNoCafRefs, Unfolding: (GHC.Types.I# 45#) -}
03458c28406881507dcff38eeabf03cc
  main28 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "test/Main.hs"#) -}
cd297e60378a23a8d56a5c0f580f41d7
  main29 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "Main"#) -}
729dd8c7b5bbf9f68829c706da5e3f1b
  main3 ::
    ((),
     [Test.Hspec.Core.Tree.Tree
        (Test.Hspec.Core.Example.ActionWith ())
        (Test.Hspec.Core.Tree.Item ())])
  {- Unfolding: ((GHC.Tuple.(), Main.main4)) -}
1ff5d3567aa708d5cd3ce0c7f68afc06
  main30 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "main"#) -}
244ebbb62d6989cbe207ae605e38f286
  main31 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "it"#) -}
e000a46bcdb0c501051a052c48525fd0
  main32 :: [GHC.Types.Char]
  {- Unfolding: (GHC.Types.:
                   @ GHC.Types.Char
                   Main.main34
                   Main.main33) -}
7d91324e808073cf6dd760c9567853e9
  main33 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   "1'' with nonempty list"#) -}
7ef64990817ae116c4f1f8fc882125dd
  main34 :: GHC.Types.Char
  {- HasNoCafRefs, Unfolding: (GHC.Types.C# 'p'#) -}
81076119e2cf8d925921afa463989ba9
  main35 :: [GHC.Types.Char]
  {- Unfolding: (GHC.Types.:
                   @ GHC.Types.Char
                   Main.main37
                   Main.main36) -}
a53252468a1fe81d129a4742ef00cbd7
  main36 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   "esting properties of p1''"#) -}
a1c1dd64a3389a9d2c35d7c9dbb616d0
  main37 :: GHC.Types.Char
  {- HasNoCafRefs, Unfolding: (GHC.Types.C# 't'#) -}
71c624e7cf8704302e7b9ad9a01f20f2
  main38 ::
    Test.Hspec.Core.Tree.Tree
      (Test.Hspec.Core.Example.ActionWith ())
      (Test.Hspec.Core.Tree.Item ())
  {- Unfolding: (Test.Hspec.Core.Tree.Node
                   @ (Test.Hspec.Core.Example.ActionWith ())
                   @ (Test.Hspec.Core.Tree.Item ())
                   Main.main98
                   Main.main39) -}
a027d8b453b9fc0ededd9c22851596ed
  main39 ::
    [Test.Hspec.Core.Tree.Tree
       (Test.Hspec.Core.Example.ActionWith ())
       (Test.Hspec.Core.Tree.Item ())]
  {- Unfolding: (GHC.Base.++
                   @ (Test.Hspec.Core.Tree.Tree
                        (Test.Hspec.Core.Example.ActionWith ())
                        (Test.Hspec.Core.Tree.Item ()))
                   Main.main65
                     `cast`
                   ([(Test.Hspec.Core.Tree.Tree
                        (Sub (Test.Hspec.Core.Example.D:R:ArgIO[0])
                         ->_R <GHC.Types.IO ()>_R)
                        (Test.Hspec.Core.Tree.Item
                           (Sub (Test.Hspec.Core.Example.D:R:ArgIO[0])))_R)_R])_R
                   Main.main40
                     `cast`
                   ([(Test.Hspec.Core.Tree.Tree
                        (Sub (Test.Hspec.Core.Example.D:R:ArgIO[0])
                         ->_R <GHC.Types.IO ()>_R)
                        (Test.Hspec.Core.Tree.Item
                           (Sub (Test.Hspec.Core.Example.D:R:ArgIO[0])))_R)_R])_R) -}
80b93dcb081fd5278c9735a761c6ea4e
  main4 ::
    [Test.Hspec.Core.Tree.Tree
       (Test.Hspec.Core.Example.ActionWith ())
       (Test.Hspec.Core.Tree.Item ())]
  {- Unfolding: (GHC.Types.:
                   @ (Test.Hspec.Core.Tree.Tree
                        (Test.Hspec.Core.Example.ActionWith ())
                        (Test.Hspec.Core.Tree.Item ()))
                   Main.main5
                   (GHC.Types.[]
                      @ (Test.Hspec.Core.Tree.Tree
                           (Test.Hspec.Core.Example.ActionWith ())
                           (Test.Hspec.Core.Tree.Item ())))) -}
5ad6cc08e7ba727460c8a4592b1189cb
  main40 ::
    [Test.Hspec.Core.Tree.SpecTree
       (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation)]
  {- Unfolding: (GHC.Types.:
                   @ (Test.Hspec.Core.Tree.SpecTree
                        (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation))
                   Main.main41
                   (GHC.Types.[]
                      @ (Test.Hspec.Core.Tree.SpecTree
                           (Test.Hspec.Core.Example.Arg
                              Test.Hspec.Expectations.Expectation)))) -}
3df2c3ef1ff6af69ce6e7b837c705d99
  main41 ::
    Test.Hspec.Core.Tree.Tree
      (Test.Hspec.Core.Example.ActionWith
         (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation))
      (Test.Hspec.Core.Tree.Item
         (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation))
  {- Unfolding: (Test.Hspec.Core.Tree.Leaf
                   @ (Test.Hspec.Core.Example.ActionWith
                        (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation))
                   @ (Test.Hspec.Core.Tree.Item
                        (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation))
                   Main.main42) -}
1ca52a0cba2eb1ec1555b90444162e61
  main42 ::
    Test.Hspec.Core.Tree.Item
      (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation)
  {- Unfolding: (Test.Hspec.Core.Tree.Item
                   @ (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation)
                   Main.main63
                   Main.main54
                   GHC.Types.False
                   Main.main43
                     `cast`
                   (<Test.Hspec.Core.Example.Params>_R
                    ->_R <Test.Hspec.Core.Example.ActionWith
                            (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation)
                          -> GHC.Types.IO ()>_R
                    ->_R <Test.Hspec.Core.Example.ProgressCallback>_R
                    ->_R Sym (GHC.Types.N:IO[0]
                                  <Data.Either.Either
                                     GHC.Exception.SomeException
                                     Test.Hspec.Core.Example.Result>_R))) -}
fb742eede2e7ba6fd22d4d3a23b61113
  main43 ::
    Test.Hspec.Core.Example.Params
    -> (Test.Hspec.Core.Example.ActionWith
          (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation)
        -> GHC.Types.IO ())
    -> Test.Hspec.Core.Example.ProgressCallback
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Data.Either.Either
            GHC.Exception.SomeException Test.Hspec.Core.Example.Result #)
  {- Arity: 4,
     Unfolding: (Test.Hspec.Core.Example.safeEvaluateExample1
                   @ Test.Hspec.Expectations.Expectation
                   Test.Hspec.Core.Example.$fExampleIO1
                     `cast`
                   (Trans
                        (<Test.Hspec.Expectations.Expectation>_R
                         ->_R <Test.Hspec.Core.Example.Params>_R
                         ->_R ((Trans
                                    (Sub (Test.Hspec.Core.Example.D:R:Arg(->)0[0] <()>_N))
                                    (Sub (Sym (Test.Hspec.Core.Example.D:R:ArgIO[0])))
                                ->_R <GHC.Types.IO ()>_R)
                               ->_R <GHC.Types.IO ()>_R)
                         ->_R <Test.Hspec.Core.Example.ProgressCallback>_R
                         ->_R Sym (GHC.Types.N:IO[0] <Test.Hspec.Core.Example.Result>_R))
                        (Sym (Test.Hspec.Core.Example.N:Example[0]
                                  <Test.Hspec.Expectations.Expectation>_N)))
                   Main.main44) -}
c9b964f81bd601b412635fb180b78794
  main44 :: Test.Hspec.Expectations.Expectation
  {- Unfolding: (Main.main47
                   Main.main45 `cast` (Sym (GHC.Types.N:IO[0] <GHC.Prim.Any>_R))
                   Test.Hspec.Expectations.anyException) -}
00bb9ae1b63fa19a40fa08325edfa759
  main45 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Prim.Any #)
  {- Arity: 1,
     Unfolding: (\ (s :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 GHC.Prim.seq# @ GHC.Prim.Any @ GHC.Prim.RealWorld Main.main46 s) -}
07b4bab0a318bee6e302ca68a66e42e6
  main46 :: GHC.Prim.Any
  {- Unfolding: (case GHC.List.reverse1
                        @ GHC.Prim.Any
                        (GHC.Types.[] @ GHC.Prim.Any)
                        (GHC.Types.[] @ GHC.Prim.Any) of wild {
                   [] -> GHC.List.badHead @ GHC.Prim.Any : x1 ds1 -> x1 }) -}
1ba386c7ffe6c646b6458f60136c42fb
  main47 ::
    GHC.Types.IO GHC.Prim.Any
    -> Test.Hspec.Expectations.Selector GHC.Exception.SomeException
    -> Test.Hspec.Expectations.Expectation
  {- Unfolding: (Test.Hspec.Expectations.shouldThrow
                   @ GHC.Exception.SomeException
                   @ GHC.Prim.Any
                   Main.main48
                     `cast`
                   (Sym (GHC.Classes.N:IP[0]
                             <"callStack">_N <GHC.Stack.Types.CallStack>_N))
                   GHC.Exception.$fExceptionSomeException) -}
568e4aae851516f5c82cfef97f463b8c
  main48 :: GHC.Stack.Types.CallStack
  {- Unfolding: (GHC.Stack.Types.PushCallStack
                   Main.main53
                   Main.main49
                   GHC.Stack.Types.EmptyCallStack) -}
4de5757679c3ad570ba33b1d4e0e638d
  main49 :: GHC.Stack.Types.SrcLoc
  {- Unfolding: (GHC.Stack.Types.SrcLoc
                   Main.main30
                   Main.main29
                   Main.main28
                   Main.main52
                   Main.main51
                   Main.main52
                   Main.main50) -}
409cd8ffd1884ae28f5536f8f4b4ced9
  main5 ::
    Test.Hspec.Core.Tree.Tree
      (Test.Hspec.Core.Example.ActionWith ())
      (Test.Hspec.Core.Tree.Item ())
  {- Unfolding: (Test.Hspec.Core.Tree.Node
                   @ (Test.Hspec.Core.Example.ActionWith ())
                   @ (Test.Hspec.Core.Tree.Item ())
                   Main.main227
                   Main.main6) -}
aacb7cb736b5197784b8f32300a84e17
  main50 :: GHC.Types.Int
  {- HasNoCafRefs, Unfolding: (GHC.Types.I# 51#) -}
012531a545a11224a67b64dc3e45c330
  main51 :: GHC.Types.Int
  {- HasNoCafRefs, Unfolding: (GHC.Types.I# 7#) -}
bc88feb510673cdf575a80a6cf5ae9b3
  main52 :: GHC.Types.Int
  {- HasNoCafRefs, Unfolding: (GHC.Types.I# 43#) -}
24ec326657925c8c378e662c755021fa
  main53 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "shouldThrow"#) -}
a15c860bb58b04648ed76239013d219d
  main54 :: GHC.Base.Maybe Test.Hspec.Core.Example.Location
  {- Unfolding: (case GHC.List.reverse1
                        @ (GHC.Base.String, GHC.Stack.Types.SrcLoc)
                        Main.main55
                        (GHC.Types.[]
                           @ (GHC.Base.String, GHC.Stack.Types.SrcLoc)) of wild {
                   [] -> GHC.Base.Nothing @ Test.Hspec.Core.Example.Location
                   : ds ds1
                   -> case ds of wild2 { (,) ds2 loc ->
                      GHC.Base.Just
                        @ Test.Hspec.Core.Example.Location
                        (Test.Hspec.Core.Example.Location
                           (case loc of wild1 { GHC.Stack.Types.SrcLoc ds4 ds5 ds3 ds6 ds7 ds8 ds9 ->
                            ds3 })
                           (case loc of wild1 { GHC.Stack.Types.SrcLoc ds4 ds5 ds3 ds6 ds7 ds8 ds9 ->
                            ds6 })
                           (case loc of wild1 { GHC.Stack.Types.SrcLoc ds4 ds5 ds3 ds6 ds7 ds8 ds9 ->
                            ds7 })
                           Test.Hspec.Core.Example.ExactLocation) } }) -}
3f40d84ed3378b682c7d5a561a3b5edf
  main55 :: [([GHC.Types.Char], GHC.Stack.Types.SrcLoc)]
  {- Unfolding: (Data.CallStack.$wunsafeDrop
                   @ ([GHC.Types.Char], GHC.Stack.Types.SrcLoc)
                   1#
                   Main.main56) -}
cbcc136b0934552b20fccdb9ebfbe8b3
  main56 :: [([GHC.Types.Char], GHC.Stack.Types.SrcLoc)]
  {- Unfolding: (GHC.Stack.Types.getCallStack Main.main57) -}
e315ebfe4fe21e3cd55d799fe3fd9f80
  main57 :: GHC.Stack.Types.CallStack
  {- Unfolding: (GHC.Stack.Types.PushCallStack
                   Test.Hspec.Core.Tree.specItem9
                   Test.Hspec.Core.Tree.specItem2
                   Main.main58) -}
5a0095d5fe72c6d27b39e3f1e5199096
  main58 :: GHC.Stack.Types.CallStack
  {- Unfolding: (GHC.Stack.Types.PushCallStack
                   Test.Hspec.Core.Spec.it9
                   Test.Hspec.Core.Spec.it2
                   Main.main59) -}
01f93f8dba4aa3f83d6ad419f37cd5e8
  main59 :: GHC.Stack.Types.CallStack
  {- Unfolding: (GHC.Stack.Types.PushCallStack
                   Main.main31
                   Main.main60
                   GHC.Stack.Types.EmptyCallStack) -}
09278b4f709c7fda5c5aeec52550ea7c
  main6 ::
    [Test.Hspec.Core.Tree.Tree
       (Test.Hspec.Core.Example.ActionWith ())
       (Test.Hspec.Core.Tree.Item ())]
  {- Unfolding: (GHC.Types.:
                   @ (Test.Hspec.Core.Tree.Tree
                        (Test.Hspec.Core.Example.ActionWith ())
                        (Test.Hspec.Core.Tree.Item ()))
                   Main.main179
                   Main.main7) -}
b25e105865ec3ee7583806ee281a2da0
  main60 :: GHC.Stack.Types.SrcLoc
  {- Unfolding: (GHC.Stack.Types.SrcLoc
                   Main.main30
                   Main.main29
                   Main.main28
                   Main.main62
                   Main.main26
                   Main.main62
                   Main.main61) -}
204884e0aa61f4640968a4fe2fc7a7c4
  main61 :: GHC.Types.Int
  {- HasNoCafRefs, Unfolding: (GHC.Types.I# 24#) -}
20da037698a7a8a58b1fc662a158e564
  main62 :: GHC.Types.Int
  {- HasNoCafRefs, Unfolding: (GHC.Types.I# 42#) -}
57a6f80cc58eeba6ad42d2e8429eeaa5
  main63 :: [GHC.Types.Char]
  {- Unfolding: (GHC.Types.:
                   @ GHC.Types.Char
                   Main.main34
                   Main.main64) -}
fcc74152e0b64dfd3bd91e579592d8bc
  main64 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "1'' with []"#) -}
a36eeb2517f6cd549905a3f4460347c7
  main65 ::
    [Test.Hspec.Core.Tree.SpecTree
       (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation)]
  {- Unfolding: (GHC.Types.:
                   @ (Test.Hspec.Core.Tree.SpecTree
                        (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation))
                   Main.main66
                   (GHC.Types.[]
                      @ (Test.Hspec.Core.Tree.SpecTree
                           (Test.Hspec.Core.Example.Arg
                              Test.Hspec.Expectations.Expectation)))) -}
8e0579016aa45da8d745bd0ea26e7060
  main66 ::
    Test.Hspec.Core.Tree.Tree
      (Test.Hspec.Core.Example.ActionWith
         (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation))
      (Test.Hspec.Core.Tree.Item
         (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation))
  {- Unfolding: (Test.Hspec.Core.Tree.Leaf
                   @ (Test.Hspec.Core.Example.ActionWith
                        (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation))
                   @ (Test.Hspec.Core.Tree.Item
                        (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation))
                   Main.main67) -}
b139b3176d62fe7a6ec31c7f49ca8412
  main67 ::
    Test.Hspec.Core.Tree.Item
      (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation)
  {- Unfolding: (Test.Hspec.Core.Tree.Item
                   @ (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation)
                   Main.main96
                   Main.main87
                   GHC.Types.False
                   Main.main68
                     `cast`
                   (<Test.Hspec.Core.Example.Params>_R
                    ->_R <Test.Hspec.Core.Example.ActionWith
                            (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation)
                          -> GHC.Types.IO ()>_R
                    ->_R <Test.Hspec.Core.Example.ProgressCallback>_R
                    ->_R Sym (GHC.Types.N:IO[0]
                                  <Data.Either.Either
                                     GHC.Exception.SomeException
                                     Test.Hspec.Core.Example.Result>_R))) -}
a4c7dfccc4c46449b43f0ca889a9abe1
  main68 ::
    Test.Hspec.Core.Example.Params
    -> (Test.Hspec.Core.Example.ActionWith
          (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation)
        -> GHC.Types.IO ())
    -> Test.Hspec.Core.Example.ProgressCallback
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Data.Either.Either
            GHC.Exception.SomeException Test.Hspec.Core.Example.Result #)
  {- Arity: 4,
     Unfolding: (Test.Hspec.Core.Example.safeEvaluateExample1
                   @ Test.Hspec.Expectations.Expectation
                   Test.Hspec.Core.Example.$fExampleIO1
                     `cast`
                   (Trans
                        (<Test.Hspec.Expectations.Expectation>_R
                         ->_R <Test.Hspec.Core.Example.Params>_R
                         ->_R ((Trans
                                    (Sub (Test.Hspec.Core.Example.D:R:Arg(->)0[0] <()>_N))
                                    (Sub (Sym (Test.Hspec.Core.Example.D:R:ArgIO[0])))
                                ->_R <GHC.Types.IO ()>_R)
                               ->_R <GHC.Types.IO ()>_R)
                         ->_R <Test.Hspec.Core.Example.ProgressCallback>_R
                         ->_R Sym (GHC.Types.N:IO[0] <Test.Hspec.Core.Example.Result>_R))
                        (Sym (Test.Hspec.Core.Example.N:Example[0]
                                  <Test.Hspec.Expectations.Expectation>_N)))
                   Main.main69) -}
afeccf6a6816fbb121529c8d536c14ba
  main69 :: Test.HUnit.Lang.Assertion
  {- Unfolding: (Main.main79
                   (GHC.Types.[] @ GHC.Types.Char)
                   Main.main75
                   Main.main70) -}
79f9c6c249b81a102605fb9a5d14fe2c
  main7 ::
    [Test.Hspec.Core.Tree.Tree
       (Test.Hspec.Core.Example.ActionWith ())
       (Test.Hspec.Core.Tree.Item ())]
  {- Unfolding: (GHC.Types.:
                   @ (Test.Hspec.Core.Tree.Tree
                        (Test.Hspec.Core.Example.ActionWith ())
                        (Test.Hspec.Core.Tree.Item ()))
                   Main.main161
                   Main.main8) -}
b4281ad9fbb5bb019c29d8353d08a955
  main70 :: GHC.Integer.Type.Integer
  {- Unfolding: (case GHC.List.reverse1
                        @ GHC.Integer.Type.Integer
                        Main.main71
                        (GHC.Types.[] @ GHC.Integer.Type.Integer) of wild1 {
                   [] -> GHC.List.badHead @ GHC.Integer.Type.Integer
                   : x ds4 -> x }) -}
a9e7ac293913674f2875485eefd20a15
  main71 :: [GHC.Integer.Type.Integer]
  {- HasNoCafRefs,
     Unfolding: (GHC.Types.:
                   @ GHC.Integer.Type.Integer
                   Main.main78
                   Main.main72) -}
c0f8c3010f28b1def0e18668479e092e
  main72 :: [GHC.Integer.Type.Integer]
  {- HasNoCafRefs,
     Unfolding: (GHC.Types.:
                   @ GHC.Integer.Type.Integer
                   Main.main77
                   Main.main73) -}
3660674b8882e742584059748b1a3a3f
  main73 :: [GHC.Integer.Type.Integer]
  {- HasNoCafRefs,
     Unfolding: (GHC.Types.:
                   @ GHC.Integer.Type.Integer
                   Main.main76
                   Main.main74) -}
17728b4785135a28238dc19951d20618
  main74 :: [GHC.Integer.Type.Integer]
  {- HasNoCafRefs,
     Unfolding: (GHC.Types.:
                   @ GHC.Integer.Type.Integer
                   Main.main75
                   (GHC.Types.[] @ GHC.Integer.Type.Integer)) -}
bda2b2f1d0d3b149e3c7dc5783ab4002
  main75 :: GHC.Integer.Type.Integer
  {- HasNoCafRefs, Unfolding: (4) -}
f33453a412365a9bf868dbd4ed5385a4
  main76 :: GHC.Integer.Type.Integer
  {- HasNoCafRefs, Unfolding: (3) -}
49d74983681b4f11b8c6fbfc237e2043
  main77 :: GHC.Integer.Type.Integer
  {- HasNoCafRefs, Unfolding: (2) -}
19297e635000c7291d4f0bfcc48d3727
  main78 :: GHC.Integer.Type.Integer
  {- HasNoCafRefs, Unfolding: (1) -}
f58ab2706c3896b34bd22ac88a973932
  main79 ::
    GHC.Base.String
    -> GHC.Integer.Type.Integer
    -> GHC.Integer.Type.Integer
    -> Test.HUnit.Lang.Assertion
  {- Unfolding: (Test.HUnit.Lang.assertEqual
                   @ GHC.Integer.Type.Integer
                   Main.main80
                     `cast`
                   (Sym (GHC.Classes.N:IP[0]
                             <"callStack">_N <GHC.Stack.Types.CallStack>_N))
                   GHC.Integer.Type.$fEqInteger
                   GHC.Show.$fShowInteger) -}
1d777f1e87507994553cc34116555159
  main8 ::
    [Test.Hspec.Core.Tree.Tree
       (Test.Hspec.Core.Example.ActionWith ())
       (Test.Hspec.Core.Tree.Item ())]
  {- Unfolding: (GHC.Types.:
                   @ (Test.Hspec.Core.Tree.Tree
                        (Test.Hspec.Core.Example.ActionWith ())
                        (Test.Hspec.Core.Tree.Item ()))
                   Main.main118
                   Main.main9) -}
b8e41e99c6df0b48ca32a4ca8df28d34
  main80 :: GHC.Stack.Types.CallStack
  {- Unfolding: (GHC.Stack.Types.PushCallStack
                   Test.HUnit.Base.@=?5
                   Test.HUnit.Base.@?=1
                   Main.main81) -}
21fc2e543eb45a634149ca290b37b6fd
  main81 :: GHC.Stack.Types.CallStack
  {- Unfolding: (GHC.Stack.Types.PushCallStack
                   Test.Hspec.Expectations.shouldBe5
                   Test.Hspec.Expectations.shouldBe1
                   Main.main82) -}
2fa0ce49194c59e0c9329e4e281891b6
  main82 :: GHC.Stack.Types.CallStack
  {- Unfolding: (GHC.Stack.Types.PushCallStack
                   Main.main86
                   Main.main83
                   GHC.Stack.Types.EmptyCallStack) -}
f7c1676401b728b42397da063c653228
  main83 :: GHC.Stack.Types.SrcLoc
  {- Unfolding: (GHC.Stack.Types.SrcLoc
                   Main.main30
                   Main.main29
                   Main.main28
                   Main.main85
                   Main.main51
                   Main.main85
                   Main.main84) -}
5364cce56b90172635991f442d4212ba
  main84 :: GHC.Types.Int
  {- HasNoCafRefs, Unfolding: (GHC.Types.I# 33#) -}
997b0414449b522ba836c45c0043d590
  main85 :: GHC.Types.Int
  {- HasNoCafRefs, Unfolding: (GHC.Types.I# 41#) -}
2d5448a52abec913247823ed0fa19469
  main86 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "shouldBe"#) -}
d140eb52ed9ac40fc0dc8c6028b2ba9e
  main87 :: GHC.Base.Maybe Test.Hspec.Core.Example.Location
  {- Unfolding: (case GHC.List.reverse1
                        @ (GHC.Base.String, GHC.Stack.Types.SrcLoc)
                        Main.main88
                        (GHC.Types.[]
                           @ (GHC.Base.String, GHC.Stack.Types.SrcLoc)) of wild {
                   [] -> GHC.Base.Nothing @ Test.Hspec.Core.Example.Location
                   : ds ds1
                   -> case ds of wild2 { (,) ds2 loc ->
                      GHC.Base.Just
                        @ Test.Hspec.Core.Example.Location
                        (Test.Hspec.Core.Example.Location
                           (case loc of wild1 { GHC.Stack.Types.SrcLoc ds4 ds5 ds3 ds6 ds7 ds8 ds9 ->
                            ds3 })
                           (case loc of wild1 { GHC.Stack.Types.SrcLoc ds4 ds5 ds3 ds6 ds7 ds8 ds9 ->
                            ds6 })
                           (case loc of wild1 { GHC.Stack.Types.SrcLoc ds4 ds5 ds3 ds6 ds7 ds8 ds9 ->
                            ds7 })
                           Test.Hspec.Core.Example.ExactLocation) } }) -}
f10382c439dd748da382f52a44035883
  main88 :: [([GHC.Types.Char], GHC.Stack.Types.SrcLoc)]
  {- Unfolding: (Data.CallStack.$wunsafeDrop
                   @ ([GHC.Types.Char], GHC.Stack.Types.SrcLoc)
                   1#
                   Main.main89) -}
5b239b095c939e83577fda9f0ac5b211
  main89 :: [([GHC.Types.Char], GHC.Stack.Types.SrcLoc)]
  {- Unfolding: (GHC.Stack.Types.getCallStack Main.main90) -}
48af19791428fd0f33473d8fac3522b6
  main9 ::
    [Test.Hspec.Core.Tree.Tree
       (Test.Hspec.Core.Example.ActionWith ())
       (Test.Hspec.Core.Tree.Item ())]
  {- Unfolding: (GHC.Types.:
                   @ (Test.Hspec.Core.Tree.Tree
                        (Test.Hspec.Core.Example.ActionWith ())
                        (Test.Hspec.Core.Tree.Item ()))
                   Main.main100
                   Main.main10) -}
f441ae7647c2c96ebb07446577f58158
  main90 :: GHC.Stack.Types.CallStack
  {- Unfolding: (GHC.Stack.Types.PushCallStack
                   Test.Hspec.Core.Tree.specItem9
                   Test.Hspec.Core.Tree.specItem2
                   Main.main91) -}
7ca4e4942264d289e76c538fb0ae6f34
  main91 :: GHC.Stack.Types.CallStack
  {- Unfolding: (GHC.Stack.Types.PushCallStack
                   Test.Hspec.Core.Spec.it9
                   Test.Hspec.Core.Spec.it2
                   Main.main92) -}
e619bd29d196663945ee9398eccb1516
  main92 :: GHC.Stack.Types.CallStack
  {- Unfolding: (GHC.Stack.Types.PushCallStack
                   Main.main31
                   Main.main93
                   GHC.Stack.Types.EmptyCallStack) -}
526a31a5adcc5f1633a23ae0bf419b02
  main93 :: GHC.Stack.Types.SrcLoc
  {- Unfolding: (GHC.Stack.Types.SrcLoc
                   Main.main30
                   Main.main29
                   Main.main28
                   Main.main95
                   Main.main26
                   Main.main95
                   Main.main94) -}
a0bbd5b0228aefe9fb53c91e50e64a5e
  main94 :: GHC.Types.Int
  {- HasNoCafRefs, Unfolding: (GHC.Types.I# 31#) -}
5726ad1e49012855f4d0ad27bda5d90d
  main95 :: GHC.Types.Int
  {- HasNoCafRefs, Unfolding: (GHC.Types.I# 40#) -}
fa27687da3a22222e953e22c031b3fe8
  main96 :: [GHC.Types.Char]
  {- Unfolding: (GHC.Types.:
                   @ GHC.Types.Char
                   Main.main34
                   Main.main97) -}
072adfe95ad3c2c966c7ca0a201026b4
  main97 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "1'' with [1,2,3,4]"#) -}
ab85c00539dea91b850a385204533a27
  main98 :: [GHC.Types.Char]
  {- Unfolding: (GHC.Types.:
                   @ GHC.Types.Char
                   Main.main37
                   Main.main99) -}
bc70e0d50ac51ee4b83b4b9929c43f32
  main99 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   "esting version p1''"#) -}
c84c20ff86e0f581fb7fe74f921467ba
  main_f :: [GHC.Types.Char] -> Test.QuickCheck.Property.Property
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: (\ (ds :: GHC.Base.String) ->
                 case ds of wild {
                   []
                   -> Test.QuickCheck.Property.$fTestableDiscard2
                        `cast`
                      (Trans
                           (Sym (Test.QuickCheck.Gen.N:Gen[0]
                                     (Test.QuickCheck.Property.N:Prop[0])))
                           (Sym (Test.QuickCheck.Property.N:Property[0])))
                   : ds1 ds2
                   -> let {
                        x1 :: Test.QuickCheck.Property.Rose Test.QuickCheck.Property.Result
                        = Test.QuickCheck.Property.protectResults
                            (Test.QuickCheck.Property.MkRose
                               @ Test.QuickCheck.Property.Result
                               (case GHC.List.reverse1
                                       @ GHC.Types.Char
                                       wild
                                       (GHC.Types.[] @ GHC.Types.Char) of wild1 {
                                  []
                                  -> case GHC.List.badHead
                                     ret_ty Test.QuickCheck.Property.Result
                                     of {}
                                  : x2 ds4
                                  -> case x2 of wild2 { GHC.Types.C# x ->
                                     case Main.main_go
                                            wild
                                            (GHC.List.lastError
                                               @ GHC.Types.Char) of wild3 { GHC.Types.C# y ->
                                     case GHC.Prim.tagToEnum#
                                            @ GHC.Types.Bool
                                            (GHC.Prim.eqChar# x y) of wild4 {
                                       GHC.Types.False -> Test.QuickCheck.Property.counterexample1
                                       GHC.Types.True -> Test.QuickCheck.Property.succeeded } } } })
                               (GHC.Types.[]
                                  @ (Test.QuickCheck.Property.Rose
                                       Test.QuickCheck.Property.Result)))
                      } in
                      (\ (ds4 :: Test.QuickCheck.Random.QCGen) (ds5 :: GHC.Types.Int) ->
                       x1)
                        `cast`
                      (Trans
                           (Sym (Test.QuickCheck.Gen.N:Gen[0]
                                     (Test.QuickCheck.Property.N:Prop[0])))
                           (Sym (Test.QuickCheck.Property.N:Property[0]))) }) -}
dffa92102f92b0a42acf02ee9792d1a5
  main_f1 :: [GHC.Types.Bool] -> Test.QuickCheck.Property.Property
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: (\ (ds :: [GHC.Types.Bool]) ->
                 case ds of wild {
                   []
                   -> Test.QuickCheck.Property.$fTestableDiscard2
                        `cast`
                      (Trans
                           (Sym (Test.QuickCheck.Gen.N:Gen[0]
                                     (Test.QuickCheck.Property.N:Prop[0])))
                           (Sym (Test.QuickCheck.Property.N:Property[0])))
                   : ds1 ds2
                   -> let {
                        x1 :: Test.QuickCheck.Property.Rose Test.QuickCheck.Property.Result
                        = Test.QuickCheck.Property.protectResults
                            (Test.QuickCheck.Property.MkRose
                               @ Test.QuickCheck.Property.Result
                               (case GHC.List.reverse1
                                       @ GHC.Types.Bool
                                       wild
                                       (GHC.Types.[] @ GHC.Types.Bool) of wild1 {
                                  []
                                  -> case GHC.List.badHead
                                     ret_ty Test.QuickCheck.Property.Result
                                     of {}
                                  : x2 ds4
                                  -> case x2 of wild2 {
                                       GHC.Types.False
                                       -> case Main.main_go1
                                                 wild
                                                 (GHC.List.lastError @ GHC.Types.Bool) of wild3 {
                                            GHC.Types.False -> Test.QuickCheck.Property.succeeded
                                            GHC.Types.True
                                            -> Test.QuickCheck.Property.counterexample1 }
                                       GHC.Types.True
                                       -> case Main.main_go1
                                                 wild
                                                 (GHC.List.lastError @ GHC.Types.Bool) of wild3 {
                                            GHC.Types.False
                                            -> Test.QuickCheck.Property.counterexample1
                                            GHC.Types.True
                                            -> Test.QuickCheck.Property.succeeded } } })
                               (GHC.Types.[]
                                  @ (Test.QuickCheck.Property.Rose
                                       Test.QuickCheck.Property.Result)))
                      } in
                      (\ (ds4 :: Test.QuickCheck.Random.QCGen) (ds5 :: GHC.Types.Int) ->
                       x1)
                        `cast`
                      (Trans
                           (Sym (Test.QuickCheck.Gen.N:Gen[0]
                                     (Test.QuickCheck.Property.N:Prop[0])))
                           (Sym (Test.QuickCheck.Property.N:Property[0]))) }) -}
6d95a2ade0cb34e6263f7b8b01701de2
  main_f2 :: [GHC.Types.Int] -> Test.QuickCheck.Property.Property
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: (\ (ds :: [GHC.Types.Int]) ->
                 case ds of wild {
                   []
                   -> Test.QuickCheck.Property.$fTestableDiscard2
                        `cast`
                      (Trans
                           (Sym (Test.QuickCheck.Gen.N:Gen[0]
                                     (Test.QuickCheck.Property.N:Prop[0])))
                           (Sym (Test.QuickCheck.Property.N:Property[0])))
                   : ds1 ds2
                   -> let {
                        x1 :: Test.QuickCheck.Property.Rose Test.QuickCheck.Property.Result
                        = Test.QuickCheck.Property.protectResults
                            (Test.QuickCheck.Property.MkRose
                               @ Test.QuickCheck.Property.Result
                               (case GHC.List.reverse1
                                       @ GHC.Types.Int
                                       wild
                                       (GHC.Types.[] @ GHC.Types.Int) of wild1 {
                                  []
                                  -> case GHC.List.badHead
                                     ret_ty Test.QuickCheck.Property.Result
                                     of {}
                                  : x ds4
                                  -> case x of wild2 { GHC.Types.I# x2 ->
                                     case Main.main_go2
                                            wild
                                            (GHC.List.lastError
                                               @ GHC.Types.Int) of wild3 { GHC.Types.I# y ->
                                     case GHC.Prim.tagToEnum#
                                            @ GHC.Types.Bool
                                            (GHC.Prim.==# x2 y) of wild4 {
                                       GHC.Types.False -> Test.QuickCheck.Property.counterexample1
                                       GHC.Types.True -> Test.QuickCheck.Property.succeeded } } } })
                               (GHC.Types.[]
                                  @ (Test.QuickCheck.Property.Rose
                                       Test.QuickCheck.Property.Result)))
                      } in
                      (\ (ds4 :: Test.QuickCheck.Random.QCGen) (ds5 :: GHC.Types.Int) ->
                       x1)
                        `cast`
                      (Trans
                           (Sym (Test.QuickCheck.Gen.N:Gen[0]
                                     (Test.QuickCheck.Property.N:Prop[0])))
                           (Sym (Test.QuickCheck.Property.N:Property[0]))) }) -}
330040b2bf9a6334eca86816755a6200
  main_go :: [GHC.Types.Char] -> GHC.Types.Char -> GHC.Types.Char
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><L,1*U(U)> -}
fda33eeee3fccaf291ff4f567c20bf6d
  main_go1 :: [GHC.Types.Bool] -> GHC.Types.Bool -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><L,1*U> -}
2e4755d36a6446211761f4ce4829de6e
  main_go2 :: [GHC.Types.Int] -> GHC.Types.Int -> GHC.Types.Int
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><L,1*U(U)> -}
"SPEC/Main $fArbitrary[]_$cshrink @ Bool" [ALWAYS] forall ($dArbitrary :: Test.QuickCheck.Arbitrary.Arbitrary
                                                                            GHC.Types.Bool)
  Test.QuickCheck.Arbitrary.$fArbitrary[]_$cshrink @ GHC.Types.Bool
                                                   $dArbitrary
  = Main.$s$fArbitrary[]_$s$fArbitrary[]_$cshrink2
"SPEC/Main $fArbitrary[]_$cshrink @ Char" [ALWAYS] forall ($dArbitrary :: Test.QuickCheck.Arbitrary.Arbitrary
                                                                            GHC.Types.Char)
  Test.QuickCheck.Arbitrary.$fArbitrary[]_$cshrink @ GHC.Types.Char
                                                   $dArbitrary
  = Main.$s$fArbitrary[]_$s$fArbitrary[]_$cshrink1
"SPEC/Main $fArbitrary[]_$cshrink @ Int" [ALWAYS] forall ($dArbitrary :: Test.QuickCheck.Arbitrary.Arbitrary
                                                                           GHC.Types.Int)
  Test.QuickCheck.Arbitrary.$fArbitrary[]_$cshrink @ GHC.Types.Int
                                                   $dArbitrary
  = Main.$s$fArbitrary[]_$s$fArbitrary[]_$cshrink
"SPEC/Main $fEqMaybe @ Int" [ALWAYS] forall ($dEq :: GHC.Classes.Eq
                                                       GHC.Types.Int)
  GHC.Base.$fEqMaybe @ GHC.Types.Int $dEq = Main.$s$fEqMaybe
"SPEC/Main $fEqMaybe @ Integer" [ALWAYS] forall ($dEq :: GHC.Classes.Eq
                                                           GHC.Integer.Type.Integer)
  GHC.Base.$fEqMaybe @ GHC.Integer.Type.Integer $dEq
  = Main.$s$fEqMaybe1
"SPEC/Main $fEqMaybe_$c== @ Int" [ALWAYS] forall ($dEq :: GHC.Classes.Eq
                                                            GHC.Types.Int)
  GHC.Base.$fEqMaybe_$c== @ GHC.Types.Int $dEq
  = Main.$s$fEqMaybe_$s$fEqMaybe_$c==
"SPEC/Main $fEqMaybe_$c== @ Integer" [ALWAYS] forall ($dEq :: GHC.Classes.Eq
                                                                GHC.Integer.Type.Integer)
  GHC.Base.$fEqMaybe_$c== @ GHC.Integer.Type.Integer $dEq
  = Main.$s$fEqMaybe_$s$fEqMaybe_$c==1
"SPEC/Main $fShowMaybe @ Int" [ALWAYS] forall ($dShow :: GHC.Show.Show
                                                           GHC.Types.Int)
  GHC.Show.$fShowMaybe @ GHC.Types.Int $dShow = Main.$s$fShowMaybe
"SPEC/Main $fShowMaybe @ Integer" [ALWAYS] forall ($dShow :: GHC.Show.Show
                                                               GHC.Integer.Type.Integer)
  GHC.Show.$fShowMaybe @ GHC.Integer.Type.Integer $dShow
  = Main.$s$fShowMaybe1
"SPEC/Main $fShowMaybe_$cshowList @ Int" [ALWAYS] forall ($dShow :: GHC.Show.Show
                                                                      GHC.Types.Int)
  GHC.Show.$fShowMaybe_$cshowList @ GHC.Types.Int $dShow
  = Main.$s$fShowMaybe_$s$fShowMaybe_$cshowList
"SPEC/Main $fShowMaybe_$cshowList @ Integer" [ALWAYS] forall ($dShow :: GHC.Show.Show
                                                                          GHC.Integer.Type.Integer)
  GHC.Show.$fShowMaybe_$cshowList @ GHC.Integer.Type.Integer $dShow
  = Main.$s$fShowMaybe_$s$fShowMaybe_$cshowList1
"SPEC/Main $fShow[] @ Bool" [ALWAYS] forall ($dShow :: GHC.Show.Show
                                                         GHC.Types.Bool)
  GHC.Show.$fShow[] @ GHC.Types.Bool $dShow = Main.$s$fShow[]
"SPEC/Main $fShow[]_$cshow @ Bool" [ALWAYS] forall ($dShow :: GHC.Show.Show
                                                                GHC.Types.Bool)
  GHC.Show.$fShow[]_$cshow @ GHC.Types.Bool $dShow
  = Main.$s$fShow[]_$s$fShow[]_$cshow
"SPEC/Main $fShow[]_$cshowList @ Bool" [ALWAYS] forall ($dShow :: GHC.Show.Show
                                                                    GHC.Types.Bool)
  GHC.Show.$fShow[]_$cshowList @ GHC.Types.Bool $dShow
  = Main.$s$fShow[]_$s$fShow[]_$cshowList
"SPEC/Main $fShow[]_$cshowsPrec @ Bool" [ALWAYS] forall ($dShow :: GHC.Show.Show
                                                                     GHC.Types.Bool)
  GHC.Show.$fShow[]_$cshowsPrec @ GHC.Types.Bool $dShow
  = Main.$s$fShow[]_$s$fShow[]_$cshowsPrec
vectorised variables:
vectorised tycons:
vectorised reused tycons:
parallel variables:
parallel tycons:
trusted: none
require own pkg trusted: False

